{"version":3,"sources":["../../../../public/plugins/input-mask/jquery.inputmask.date.extensions.js"],"names":["$","extend","inputmask","defaults","definitions","validator","cardinality","prevalidator","aliases","mask","placeholder","regex","val1pre","RegExp","val1","val2pre","separator","escapedSeparator","escapeRegex","call","val2","leapday","yearrange","minyear","maxyear","isInYearRange","chrs","enteredyear","parseInt","concat","toString","slice","length","enteredyear2","NaN","determinebaseyear","hint","currentyear","Date","getFullYear","maxYearPrefix","maxYearPostfix","maxxYear","onKeyUp","e","buffer","opts","$input","ctrlKey","keyCode","RIGHT","today","val","getDate","getMonth","pos","strict","isValid","test","charAt","indexOf","frontValue","join","substr","dayMonthValue","year","yearPrefix","insertMode","autoUnmask","alias","hrspre","hrs24","hrs","ampm","timeseparator","hourFormat","tmp","casing","jQuery"],"mappings":"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","file":"jquery.inputmask.date.extensions.js","sourcesContent":["/*\nInput Mask plugin extensions\nhttp://github.com/RobinHerbots/jquery.inputmask\nCopyright (c) 2010 - 2014 Robin Herbots\nLicensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\nVersion: 0.0.0\n\nOptional extensions on the jquery.inputmask base\n*/\n(function ($) {\n    //date & time aliases\n    $.extend($.inputmask.defaults.definitions, {\n        'h': { //hours\n            validator: \"[01][0-9]|2[0-3]\",\n            cardinality: 2,\n            prevalidator: [{ validator: \"[0-2]\", cardinality: 1 }]\n        },\n        's': { //seconds || minutes\n            validator: \"[0-5][0-9]\",\n            cardinality: 2,\n            prevalidator: [{ validator: \"[0-5]\", cardinality: 1 }]\n        },\n        'd': { //basic day\n            validator: \"0[1-9]|[12][0-9]|3[01]\",\n            cardinality: 2,\n            prevalidator: [{ validator: \"[0-3]\", cardinality: 1 }]\n        },\n        'm': { //basic month\n            validator: \"0[1-9]|1[012]\",\n            cardinality: 2,\n            prevalidator: [{ validator: \"[01]\", cardinality: 1 }]\n        },\n        'y': { //basic year\n            validator: \"(19|20)\\\\d{2}\",\n            cardinality: 4,\n            prevalidator: [\n                        { validator: \"[12]\", cardinality: 1 },\n                        { validator: \"(19|20)\", cardinality: 2 },\n                        { validator: \"(19|20)\\\\d\", cardinality: 3 }\n            ]\n        }\n    });\n    $.extend($.inputmask.defaults.aliases, {\n        'dd/mm/yyyy': {\n            mask: \"1/2/y\",\n            placeholder: \"dd/mm/yyyy\",\n            regex: {\n                val1pre: new RegExp(\"[0-3]\"), //daypre\n                val1: new RegExp(\"0[1-9]|[12][0-9]|3[01]\"), //day\n                val2pre: function (separator) { var escapedSeparator = $.inputmask.escapeRegex.call(this, separator); return new RegExp(\"((0[1-9]|[12][0-9]|3[01])\" + escapedSeparator + \"[01])\"); }, //monthpre\n                val2: function (separator) { var escapedSeparator = $.inputmask.escapeRegex.call(this, separator); return new RegExp(\"((0[1-9]|[12][0-9])\" + escapedSeparator + \"(0[1-9]|1[012]))|(30\" + escapedSeparator + \"(0[13-9]|1[012]))|(31\" + escapedSeparator + \"(0[13578]|1[02]))\"); }//month\n            },\n            leapday: \"29/02/\",\n            separator: '/',\n            yearrange: { minyear: 1900, maxyear: 2099 },\n            isInYearRange: function (chrs, minyear, maxyear) {\n                var enteredyear = parseInt(chrs.concat(minyear.toString().slice(chrs.length)));\n                var enteredyear2 = parseInt(chrs.concat(maxyear.toString().slice(chrs.length)));\n                return (enteredyear != NaN ? minyear <= enteredyear && enteredyear <= maxyear : false) ||\n            \t\t   (enteredyear2 != NaN ? minyear <= enteredyear2 && enteredyear2 <= maxyear : false);\n            },\n            determinebaseyear: function (minyear, maxyear, hint) {\n                var currentyear = (new Date()).getFullYear();\n                if (minyear > currentyear) return minyear;\n                if (maxyear < currentyear) {\n                    var maxYearPrefix = maxyear.toString().slice(0, 2);\n                    var maxYearPostfix = maxyear.toString().slice(2, 4);\n                    while (maxyear < maxYearPrefix + hint) {\n                        maxYearPrefix--;\n                    }\n                    var maxxYear = maxYearPrefix + maxYearPostfix;\n                    return minyear > maxxYear ? minyear : maxxYear;\n                }\n\n                return currentyear;\n            },\n            onKeyUp: function (e, buffer, opts) {\n                var $input = $(this);\n                if (e.ctrlKey && e.keyCode == opts.keyCode.RIGHT) {\n                    var today = new Date();\n                    $input.val(today.getDate().toString() + (today.getMonth() + 1).toString() + today.getFullYear().toString());\n                }\n            },\n            definitions: {\n                '1': { //val1 ~ day or month\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var isValid = opts.regex.val1.test(chrs);\n                        if (!strict && !isValid) {\n                            if (chrs.charAt(1) == opts.separator || \"-./\".indexOf(chrs.charAt(1)) != -1) {\n                                isValid = opts.regex.val1.test(\"0\" + chrs.charAt(0));\n                                if (isValid) {\n                                    buffer[pos - 1] = \"0\";\n                                    return { \"pos\": pos, \"c\": chrs.charAt(0) };\n                                }\n                            }\n                        }\n                        return isValid;\n                    },\n                    cardinality: 2,\n                    prevalidator: [{\n                        validator: function (chrs, buffer, pos, strict, opts) {\n                            var isValid = opts.regex.val1pre.test(chrs);\n                            if (!strict && !isValid) {\n                                isValid = opts.regex.val1.test(\"0\" + chrs);\n                                if (isValid) {\n                                    buffer[pos] = \"0\";\n                                    pos++;\n                                    return { \"pos\": pos };\n                                }\n                            }\n                            return isValid;\n                        }, cardinality: 1\n                    }]\n                },\n                '2': { //val2 ~ day or month\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var frontValue = buffer.join('').substr(0, 3);\n                        if (frontValue.indexOf(opts.placeholder[0]) != -1) frontValue = \"01\" + opts.separator;\n                        var isValid = opts.regex.val2(opts.separator).test(frontValue + chrs);\n                        if (!strict && !isValid) {\n                            if (chrs.charAt(1) == opts.separator || \"-./\".indexOf(chrs.charAt(1)) != -1) {\n                                isValid = opts.regex.val2(opts.separator).test(frontValue + \"0\" + chrs.charAt(0));\n                                if (isValid) {\n                                    buffer[pos - 1] = \"0\";\n                                    return { \"pos\": pos, \"c\": chrs.charAt(0) };\n                                }\n                            }\n                        }\n                        return isValid;\n                    },\n                    cardinality: 2,\n                    prevalidator: [{\n                        validator: function (chrs, buffer, pos, strict, opts) {\n                            var frontValue = buffer.join('').substr(0, 3);\n                            if (frontValue.indexOf(opts.placeholder[0]) != -1) frontValue = \"01\" + opts.separator;\n                            var isValid = opts.regex.val2pre(opts.separator).test(frontValue + chrs);\n                            if (!strict && !isValid) {\n                                isValid = opts.regex.val2(opts.separator).test(frontValue + \"0\" + chrs);\n                                if (isValid) {\n                                    buffer[pos] = \"0\";\n                                    pos++;\n                                    return { \"pos\": pos };\n                                }\n                            }\n                            return isValid;\n                        }, cardinality: 1\n                    }]\n                },\n                'y': { //year\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        if (opts.isInYearRange(chrs, opts.yearrange.minyear, opts.yearrange.maxyear)) {\n                            var dayMonthValue = buffer.join('').substr(0, 6);\n                            if (dayMonthValue != opts.leapday)\n                                return true;\n                            else {\n                                var year = parseInt(chrs, 10);//detect leap year\n                                if (year % 4 === 0)\n                                    if (year % 100 === 0)\n                                        if (year % 400 === 0)\n                                            return true;\n                                        else return false;\n                                    else return true;\n                                else return false;\n                            }\n                        } else return false;\n                    },\n                    cardinality: 4,\n                    prevalidator: [\n                {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var isValid = opts.isInYearRange(chrs, opts.yearrange.minyear, opts.yearrange.maxyear);\n                        if (!strict && !isValid) {\n                            var yearPrefix = opts.determinebaseyear(opts.yearrange.minyear, opts.yearrange.maxyear, chrs + \"0\").toString().slice(0, 1);\n\n                            isValid = opts.isInYearRange(yearPrefix + chrs, opts.yearrange.minyear, opts.yearrange.maxyear);\n                            if (isValid) {\n                                buffer[pos++] = yearPrefix[0];\n                                return { \"pos\": pos };\n                            }\n                            yearPrefix = opts.determinebaseyear(opts.yearrange.minyear, opts.yearrange.maxyear, chrs + \"0\").toString().slice(0, 2);\n\n                            isValid = opts.isInYearRange(yearPrefix + chrs, opts.yearrange.minyear, opts.yearrange.maxyear);\n                            if (isValid) {\n                                buffer[pos++] = yearPrefix[0];\n                                buffer[pos++] = yearPrefix[1];\n                                return { \"pos\": pos };\n                            }\n                        }\n                        return isValid;\n                    },\n                    cardinality: 1\n                },\n                {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var isValid = opts.isInYearRange(chrs, opts.yearrange.minyear, opts.yearrange.maxyear);\n                        if (!strict && !isValid) {\n                            var yearPrefix = opts.determinebaseyear(opts.yearrange.minyear, opts.yearrange.maxyear, chrs).toString().slice(0, 2);\n\n                            isValid = opts.isInYearRange(chrs[0] + yearPrefix[1] + chrs[1], opts.yearrange.minyear, opts.yearrange.maxyear);\n                            if (isValid) {\n                                buffer[pos++] = yearPrefix[1];\n                                return { \"pos\": pos };\n                            }\n\n                            yearPrefix = opts.determinebaseyear(opts.yearrange.minyear, opts.yearrange.maxyear, chrs).toString().slice(0, 2);\n                            if (opts.isInYearRange(yearPrefix + chrs, opts.yearrange.minyear, opts.yearrange.maxyear)) {\n                                var dayMonthValue = buffer.join('').substr(0, 6);\n                                if (dayMonthValue != opts.leapday)\n                                    isValid = true;\n                                else {\n                                    var year = parseInt(chrs, 10);//detect leap year\n                                    if (year % 4 === 0)\n                                        if (year % 100 === 0)\n                                            if (year % 400 === 0)\n                                                isValid = true;\n                                            else isValid = false;\n                                        else isValid = true;\n                                    else isValid = false;\n                                }\n                            } else isValid = false;\n                            if (isValid) {\n                                buffer[pos - 1] = yearPrefix[0];\n                                buffer[pos++] = yearPrefix[1];\n                                buffer[pos++] = chrs[0];\n                                return { \"pos\": pos };\n                            }\n                        }\n                        return isValid;\n                    }, cardinality: 2\n                },\n                {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        return opts.isInYearRange(chrs, opts.yearrange.minyear, opts.yearrange.maxyear);\n                    }, cardinality: 3\n                }\n                    ]\n                }\n            },\n            insertMode: false,\n            autoUnmask: false\n        },\n        'mm/dd/yyyy': {\n            placeholder: \"mm/dd/yyyy\",\n            alias: \"dd/mm/yyyy\", //reuse functionality of dd/mm/yyyy alias\n            regex: {\n                val2pre: function (separator) { var escapedSeparator = $.inputmask.escapeRegex.call(this, separator); return new RegExp(\"((0[13-9]|1[012])\" + escapedSeparator + \"[0-3])|(02\" + escapedSeparator + \"[0-2])\"); }, //daypre\n                val2: function (separator) { var escapedSeparator = $.inputmask.escapeRegex.call(this, separator); return new RegExp(\"((0[1-9]|1[012])\" + escapedSeparator + \"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])\" + escapedSeparator + \"30)|((0[13578]|1[02])\" + escapedSeparator + \"31)\"); }, //day\n                val1pre: new RegExp(\"[01]\"), //monthpre\n                val1: new RegExp(\"0[1-9]|1[012]\") //month\n            },\n            leapday: \"02/29/\",\n            onKeyUp: function (e, buffer, opts) {\n                var $input = $(this);\n                if (e.ctrlKey && e.keyCode == opts.keyCode.RIGHT) {\n                    var today = new Date();\n                    $input.val((today.getMonth() + 1).toString() + today.getDate().toString() + today.getFullYear().toString());\n                }\n            }\n        },\n        'yyyy/mm/dd': {\n            mask: \"y/1/2\",\n            placeholder: \"yyyy/mm/dd\",\n            alias: \"mm/dd/yyyy\",\n            leapday: \"/02/29\",\n            onKeyUp: function (e, buffer, opts) {\n                var $input = $(this);\n                if (e.ctrlKey && e.keyCode == opts.keyCode.RIGHT) {\n                    var today = new Date();\n                    $input.val(today.getFullYear().toString() + (today.getMonth() + 1).toString() + today.getDate().toString());\n                }\n            },\n            definitions: {\n                '2': { //val2 ~ day or month\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var frontValue = buffer.join('').substr(5, 3);\n                        if (frontValue.indexOf(opts.placeholder[5]) != -1) frontValue = \"01\" + opts.separator;\n                        var isValid = opts.regex.val2(opts.separator).test(frontValue + chrs);\n                        if (!strict && !isValid) {\n                            if (chrs.charAt(1) == opts.separator || \"-./\".indexOf(chrs.charAt(1)) != -1) {\n                                isValid = opts.regex.val2(opts.separator).test(frontValue + \"0\" + chrs.charAt(0));\n                                if (isValid) {\n                                    buffer[pos - 1] = \"0\";\n                                    return { \"pos\": pos, \"c\": chrs.charAt(0) };\n                                }\n                            }\n                        }\n\n                        //check leap yeap\n                        if (isValid) {\n                            var dayMonthValue = buffer.join('').substr(4, 4) + chrs;\n                            if (dayMonthValue != opts.leapday)\n                                return true;\n                            else {\n                                var year = parseInt(buffer.join('').substr(0, 4), 10);  //detect leap year\n                                if (year % 4 === 0)\n                                    if (year % 100 === 0)\n                                        if (year % 400 === 0)\n                                            return true;\n                                        else return false;\n                                    else return true;\n                                else return false;\n                            }\n                        }\n\n                        return isValid;\n                    },\n                    cardinality: 2,\n                    prevalidator: [{\n                        validator: function (chrs, buffer, pos, strict, opts) {\n                            var frontValue = buffer.join('').substr(5, 3);\n                            if (frontValue.indexOf(opts.placeholder[5]) != -1) frontValue = \"01\" + opts.separator;\n                            var isValid = opts.regex.val2pre(opts.separator).test(frontValue + chrs);\n                            if (!strict && !isValid) {\n                                isValid = opts.regex.val2(opts.separator).test(frontValue + \"0\" + chrs);\n                                if (isValid) {\n                                    buffer[pos] = \"0\";\n                                    pos++;\n                                    return { \"pos\": pos };\n                                }\n                            }\n                            return isValid;\n                        }, cardinality: 1\n                    }]\n                }\n            }\n        },\n        'dd.mm.yyyy': {\n            mask: \"1.2.y\",\n            placeholder: \"dd.mm.yyyy\",\n            leapday: \"29.02.\",\n            separator: '.',\n            alias: \"dd/mm/yyyy\"\n        },\n        'dd-mm-yyyy': {\n            mask: \"1-2-y\",\n            placeholder: \"dd-mm-yyyy\",\n            leapday: \"29-02-\",\n            separator: '-',\n            alias: \"dd/mm/yyyy\"\n        },\n        'mm.dd.yyyy': {\n            mask: \"1.2.y\",\n            placeholder: \"mm.dd.yyyy\",\n            leapday: \"02.29.\",\n            separator: '.',\n            alias: \"mm/dd/yyyy\"\n        },\n        'mm-dd-yyyy': {\n            mask: \"1-2-y\",\n            placeholder: \"mm-dd-yyyy\",\n            leapday: \"02-29-\",\n            separator: '-',\n            alias: \"mm/dd/yyyy\"\n        },\n        'yyyy.mm.dd': {\n            mask: \"y.1.2\",\n            placeholder: \"yyyy.mm.dd\",\n            leapday: \".02.29\",\n            separator: '.',\n            alias: \"yyyy/mm/dd\"\n        },\n        'yyyy-mm-dd': {\n            mask: \"y-1-2\",\n            placeholder: \"yyyy-mm-dd\",\n            leapday: \"-02-29\",\n            separator: '-',\n            alias: \"yyyy/mm/dd\"\n        },\n        'datetime': {\n            mask: \"1/2/y h:s\",\n            placeholder: \"dd/mm/yyyy hh:mm\",\n            alias: \"dd/mm/yyyy\",\n            regex: {\n                hrspre: new RegExp(\"[012]\"), //hours pre\n                hrs24: new RegExp(\"2[0-9]|1[3-9]\"),\n                hrs: new RegExp(\"[01][0-9]|2[0-3]\"), //hours\n                ampm: new RegExp(\"^[a|p|A|P][m|M]\")\n            },\n            timeseparator: ':',\n            hourFormat: \"24\", // or 12\n            definitions: {\n                'h': { //hours\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        var isValid = opts.regex.hrs.test(chrs);\n                        if (!strict && !isValid) {\n                            if (chrs.charAt(1) == opts.timeseparator || \"-.:\".indexOf(chrs.charAt(1)) != -1) {\n                                isValid = opts.regex.hrs.test(\"0\" + chrs.charAt(0));\n                                if (isValid) {\n                                    buffer[pos - 1] = \"0\";\n                                    buffer[pos] = chrs.charAt(0);\n                                    pos++;\n                                    return { \"pos\": pos };\n                                }\n                            }\n                        }\n\n                        if (isValid && opts.hourFormat !== \"24\" && opts.regex.hrs24.test(chrs)) {\n\n                            var tmp = parseInt(chrs, 10);\n\n                            if (tmp == 24) {\n                                buffer[pos + 5] = \"a\";\n                                buffer[pos + 6] = \"m\";\n                            } else {\n                                buffer[pos + 5] = \"p\";\n                                buffer[pos + 6] = \"m\";\n                            }\n\n                            tmp = tmp - 12;\n\n                            if (tmp < 10) {\n                                buffer[pos] = tmp.toString();\n                                buffer[pos - 1] = \"0\";\n                            } else {\n                                buffer[pos] = tmp.toString().charAt(1);\n                                buffer[pos - 1] = tmp.toString().charAt(0);\n                            }\n\n                            return { \"pos\": pos, \"c\": buffer[pos] };\n                        }\n\n                        return isValid;\n                    },\n                    cardinality: 2,\n                    prevalidator: [{\n                        validator: function (chrs, buffer, pos, strict, opts) {\n                            var isValid = opts.regex.hrspre.test(chrs);\n                            if (!strict && !isValid) {\n                                isValid = opts.regex.hrs.test(\"0\" + chrs);\n                                if (isValid) {\n                                    buffer[pos] = \"0\";\n                                    pos++;\n                                    return { \"pos\": pos };\n                                }\n                            }\n                            return isValid;\n                        }, cardinality: 1\n                    }]\n                },\n                't': { //am/pm\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        return opts.regex.ampm.test(chrs + \"m\");\n                    },\n                    casing: \"lower\",\n                    cardinality: 1\n                }\n            },\n            insertMode: false,\n            autoUnmask: false\n        },\n        'datetime12': {\n            mask: \"1/2/y h:s t\\\\m\",\n            placeholder: \"dd/mm/yyyy hh:mm xm\",\n            alias: \"datetime\",\n            hourFormat: \"12\"\n        },\n        'hh:mm t': {\n            mask: \"h:s t\\\\m\",\n            placeholder: \"hh:mm xm\",\n            alias: \"datetime\",\n            hourFormat: \"12\"\n        },\n        'h:s t': {\n            mask: \"h:s t\\\\m\",\n            placeholder: \"hh:mm xm\",\n            alias: \"datetime\",\n            hourFormat: \"12\"\n        },\n        'hh:mm:ss': {\n            mask: \"h:s:s\",\n            autoUnmask: false\n        },\n        'hh:mm': {\n            mask: \"h:s\",\n            autoUnmask: false\n        },\n        'date': {\n            alias: \"dd/mm/yyyy\" // \"mm/dd/yyyy\"\n        },\n        'mm/yyyy': {\n            mask: \"1/y\",\n            placeholder: \"mm/yyyy\",\n            leapday: \"donotuse\",\n            separator: '/',\n            alias: \"mm/dd/yyyy\"\n        }\n    });\n})(jQuery);\n"]}