{"version":3,"sources":["../../../../public/plugins/input-mask/jquery.inputmask.phone.extensions.js"],"names":["$","extend","inputmask","defaults","aliases","url","mask","opts","definitions","validator","cardinality","maskList","ajax","async","dataType","success","response","splice","jQuery"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAmBA,CAAC,UAAUA,CAAV,EAAa;AACVA,MAAEC,MAAF,CAASD,EAAEE,SAAF,CAAYC,QAAZ,CAAqBC,OAA9B,EAAuC;AACnC,iBAAS;AACLC,iBAAK,8BADA;AAELC,kBAAM,cAAUC,IAAV,EAAgB;AAClBA,qBAAKC,WAAL,GAAmB;AACf,yBAAK;AACDC,mCAAW,qBAAY;AAAE,mCAAO,KAAP;AAAe,yBADvC;AAEDC,qCAAa;AAFZ,qBADU;AAKf,yBAAK;AACDD,mCAAW,OADV;AAEDC,qCAAa;AAFZ;AALU,iBAAnB;AAUA,oBAAIC,WAAW,EAAf;AACAX,kBAAEY,IAAF,CAAO;AACHP,yBAAKE,KAAKF,GADP;AAEHQ,2BAAO,KAFJ;AAGHC,8BAAU,MAHP;AAIHC,6BAAS,iBAAUC,QAAV,EAAoB;AACzBL,mCAAWK,QAAX;AACH;AANE,iBAAP;;AASAL,yBAASM,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,iBAAtB;AACA,uBAAON,QAAP;AACH;AAzBI;AAD0B,KAAvC;AA6BH,CA9BD,EA8BGO,MA9BH","file":"jquery.inputmask.phone.extensions.js","sourcesContent":["/*\nInput Mask plugin extensions\nhttp://github.com/RobinHerbots/jquery.inputmask\nCopyright (c) 2010 - 2014 Robin Herbots\nLicensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\nVersion: 0.0.0\n\nPhone extension.\nWhen using this extension make sure you specify the correct url to get the masks\n\n $(selector).inputmask(\"phone\", {\n                url: \"Scripts/jquery.inputmask/phone-codes/phone-codes.json\", \n                onKeyValidation: function () { //show some metadata in the console\n                    console.log($(this).inputmask(\"getmetadata\")[\"name_en\"]);\n                } \n  });\n\n\n*/\n(function ($) {\n    $.extend($.inputmask.defaults.aliases, {\n        'phone': {\n            url: \"phone-codes/phone-codes.json\",\n            mask: function (opts) {\n                opts.definitions = {\n                    'p': {\n                        validator: function () { return false; },\n                        cardinality: 1\n                    },\n                    '#': {\n                        validator: \"[0-9]\",\n                        cardinality: 1\n                    }\n                };\n                var maskList = [];\n                $.ajax({\n                    url: opts.url,\n                    async: false,\n                    dataType: 'json',\n                    success: function (response) {\n                        maskList = response;\n                    }\n                });\n    \n                maskList.splice(0, 0, \"+p(ppp)ppp-pppp\");\n                return maskList;\n            }\n        }\n    });\n})(jQuery);\n"]}