{"version":3,"sources":["../../../../public/plugins/input-mask/jquery.inputmask.extensions.js"],"names":["$","extend","inputmask","defaults","definitions","validator","cardinality","casing","aliases","mask","placeholder","separator","defaultPrefix","regex","urlpre1","RegExp","urlpre2","urlpre3","urlpre4","urlpre5","urlpre6","urlpre7","urlpre8","chrs","buffer","pos","strict","opts","prevalidator","result","prefixLimit","i","j","tmp","k","length","join","substring","isValid","test","insertMode","autoUnmask","definitionSymbol","jQuery"],"mappings":";;AAAA;;;;;;;;;AASA,CAAC,UAAUA,CAAV,EAAa;AACV;AACAA,MAAEC,MAAF,CAASD,EAAEE,SAAF,CAAYC,QAAZ,CAAqBC,WAA9B,EAA2C;AACvC,aAAK;AACDC,uBAAW,UADV;AAEDC,yBAAa,CAFZ;AAGDC,oBAAQ,OAHP,CAGe;AAHf,SADkC;AAMvC,aAAK;AACDF,uBAAW,sCADV;AAEDC,yBAAa,CAFZ;AAGDC,oBAAQ;AAHP;AANkC,KAA3C;AAYAP,MAAEC,MAAF,CAASD,EAAEE,SAAF,CAAYC,QAAZ,CAAqBK,OAA9B,EAAuC;AACnC,eAAO;AACHC,kBAAM,IADH;AAEHC,yBAAa,EAFV;AAGHC,uBAAW,EAHR;AAIHC,2BAAe,SAJZ;AAKHC,mBAAO;AACHC,yBAAS,IAAIC,MAAJ,CAAW,MAAX,CADN;AAEHC,yBAAS,IAAID,MAAJ,CAAW,SAAX,CAFN;AAGHE,yBAAS,IAAIF,MAAJ,CAAW,WAAX,CAHN;AAIHG,yBAAS,IAAIH,MAAJ,CAAW,kBAAX,CAJN;AAKHI,yBAAS,IAAIJ,MAAJ,CAAW,2BAAX,CALN;AAMHK,yBAAS,IAAIL,MAAJ,CAAW,+BAAX,CANN;AAOHM,yBAAS,IAAIN,MAAJ,CAAW,kCAAX,CAPN;AAQHO,yBAAS,IAAIP,MAAJ,CAAW,mCAAX;AARN,aALJ;AAeHX,yBAAa;AACT,qBAAK;AACDC,+BAAW,mBAAUkB,IAAV,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAClD,+BAAO,IAAP;AACH,qBAHA;AAIDrB,iCAAa,CAJZ;AAKDsB,kCAAe,YAAY;AACvB,4BAAIC,SAAS,EAAb;AAAA,4BAAiBC,cAAc,CAA/B;AACA,6BAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,WAApB,EAAiCC,GAAjC,EAAsC;AAClCF,mCAAOE,CAAP,IAAa,YAAY;AACrB,oCAAIC,IAAID,CAAR;AACA,uCAAO;AACH1B,+CAAW,mBAAUkB,IAAV,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAClD,4CAAIA,KAAKd,KAAL,CAAW,YAAYmB,IAAI,CAAhB,CAAX,CAAJ,EAAoC;AAChC,gDAAIC,MAAMV,IAAV;AAAA,gDAAgBW,CAAhB;AACA,gDAAMF,IAAI,CAAL,GAAUT,KAAKY,MAAhB,GAA0B,CAA9B,EAAiC;AAC7BF,sDAAMT,OAAOY,IAAP,CAAY,EAAZ,EAAgBC,SAAhB,CAA0B,CAA1B,EAA+BL,IAAI,CAAL,GAAUT,KAAKY,MAA7C,IAAwD,EAAxD,GAA6DF,GAAnE;AACH;AACD,gDAAIK,UAAUX,KAAKd,KAAL,CAAW,YAAYmB,IAAI,CAAhB,CAAX,EAA+BO,IAA/B,CAAoCN,GAApC,CAAd;AACA,gDAAI,CAACP,MAAD,IAAW,CAACY,OAAhB,EAAyB;AACrBb,sDAAMA,MAAMO,CAAZ;AACA,qDAAKE,IAAI,CAAT,EAAYA,IAAIP,KAAKf,aAAL,CAAmBuB,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5CV,2DAAOC,GAAP,IAAcE,KAAKf,aAAL,CAAmBsB,CAAnB,CAAd,CAAqCT;AACxC;AACD,qDAAKS,IAAI,CAAT,EAAYA,IAAID,IAAIE,MAAJ,GAAa,CAA7B,EAAgCD,GAAhC,EAAqC;AACjCV,2DAAOC,GAAP,IAAcQ,IAAIC,CAAJ,CAAd,CAAsBT;AACzB;AACD,uDAAO,EAAE,OAAOA,GAAT,EAAP;AACH;AACD,mDAAOa,OAAP;AACH,yCAjBD,MAiBO;AACH,mDAAO,KAAP;AACH;AACJ,qCAtBE,EAsBAhC,aAAa0B;AAtBb,iCAAP;AAwBH,6BA1BW,EAAZ;AA2BH;AACD,+BAAOH,MAAP;AACH,qBAhCa;AALb,iBADI;AAwCT,qBAAK;AACDxB,+BAAW,GADV;AAEDC,iCAAa;AAFZ;AAxCI,aAfV;AA4DHkC,wBAAY,KA5DT;AA6DHC,wBAAY;AA7DT,SAD4B;AAgEnC,cAAM,EAAE;AACJhC,kBAAM,CAAC,+BAAD,EAAkC,mCAAlC,CADJ;AAEFL,yBAAa;AACT,qBAAK;AACDC,+BAAW,OADV;AAEDC,iCAAa,CAFZ;AAGDoC,sCAAkB;AAHjB,iBADI;AAMT,qBAAK;AACDrC,+BAAW,mBAAUkB,IAAV,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAClD,4BAAIF,MAAM,CAAN,GAAU,CAAC,CAAX,IAAgBD,OAAOC,MAAM,CAAb,KAAmB,GAAvC,EACIF,OAAOC,OAAOC,MAAM,CAAb,IAAkBF,IAAzB,CADJ,KAEKA,OAAO,MAAMA,IAAb;AACL,+BAAO,IAAIR,MAAJ,CAAW,kBAAX,EAA+BwB,IAA/B,CAAoChB,IAApC,CAAP;AACH,qBANA;AAODjB,iCAAa,CAPZ;AAQDoC,sCAAkB;AARjB,iBANI;AAgBT,qBAAK;AACDrC,+BAAW,mBAAUkB,IAAV,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAClD,4BAAIF,MAAM,CAAN,GAAU,CAAC,CAAX,IAAgBD,OAAOC,MAAM,CAAb,KAAmB,GAAvC,EAA4C;AACxCF,mCAAOC,OAAOC,MAAM,CAAb,IAAkBF,IAAzB;AACA,gCAAIE,MAAM,CAAN,GAAU,CAAC,CAAX,IAAgBD,OAAOC,MAAM,CAAb,KAAmB,GAAvC,EAA4C;AACxCF,uCAAOC,OAAOC,MAAM,CAAb,IAAkBF,IAAzB;AACH,6BAFD,MAEOA,OAAO,MAAMA,IAAb;AACV,yBALD,MAKOA,OAAO,OAAOA,IAAd;AACP,+BAAO,IAAIR,MAAJ,CAAW,oCAAX,EAAiDwB,IAAjD,CAAsDhB,IAAtD,CAAP;AACH,qBATA;AAUDjB,iCAAa,CAVZ;AAWDoC,sCAAkB;AAXjB;AAhBI;AAFX;AAhE6B,KAAvC;AAkGH,CAhHD,EAgHGC,MAhHH","file":"jquery.inputmask.extensions.js","sourcesContent":["/*\nInput Mask plugin extensions\nhttp://github.com/RobinHerbots/jquery.inputmask\nCopyright (c) 2010 - 2014 Robin Herbots\nLicensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\nVersion: 0.0.0\n\nOptional extensions on the jquery.inputmask base\n*/\n(function ($) {\n    //extra definitions\n    $.extend($.inputmask.defaults.definitions, {\n        'A': {\n            validator: \"[A-Za-z]\",\n            cardinality: 1,\n            casing: \"upper\" //auto uppercasing\n        },\n        '#': {\n            validator: \"[A-Za-z\\u0410-\\u044F\\u0401\\u04510-9]\",\n            cardinality: 1,\n            casing: \"upper\"\n        }\n    });\n    $.extend($.inputmask.defaults.aliases, {\n        'url': {\n            mask: \"ir\",\n            placeholder: \"\",\n            separator: \"\",\n            defaultPrefix: \"http://\",\n            regex: {\n                urlpre1: new RegExp(\"[fh]\"),\n                urlpre2: new RegExp(\"(ft|ht)\"),\n                urlpre3: new RegExp(\"(ftp|htt)\"),\n                urlpre4: new RegExp(\"(ftp:|http|ftps)\"),\n                urlpre5: new RegExp(\"(ftp:/|ftps:|http:|https)\"),\n                urlpre6: new RegExp(\"(ftp://|ftps:/|http:/|https:)\"),\n                urlpre7: new RegExp(\"(ftp://|ftps://|http://|https:/)\"),\n                urlpre8: new RegExp(\"(ftp://|ftps://|http://|https://)\")\n            },\n            definitions: {\n                'i': {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        return true;\n                    },\n                    cardinality: 8,\n                    prevalidator: (function () {\n                        var result = [], prefixLimit = 8;\n                        for (var i = 0; i < prefixLimit; i++) {\n                            result[i] = (function () {\n                                var j = i;\n                                return {\n                                    validator: function (chrs, buffer, pos, strict, opts) {\n                                        if (opts.regex[\"urlpre\" + (j + 1)]) {\n                                            var tmp = chrs, k;\n                                            if (((j + 1) - chrs.length) > 0) {\n                                                tmp = buffer.join('').substring(0, ((j + 1) - chrs.length)) + \"\" + tmp;\n                                            }\n                                            var isValid = opts.regex[\"urlpre\" + (j + 1)].test(tmp);\n                                            if (!strict && !isValid) {\n                                                pos = pos - j;\n                                                for (k = 0; k < opts.defaultPrefix.length; k++) {\n                                                    buffer[pos] = opts.defaultPrefix[k]; pos++;\n                                                }\n                                                for (k = 0; k < tmp.length - 1; k++) {\n                                                    buffer[pos] = tmp[k]; pos++;\n                                                }\n                                                return { \"pos\": pos };\n                                            }\n                                            return isValid;\n                                        } else {\n                                            return false;\n                                        }\n                                    }, cardinality: j\n                                };\n                            })();\n                        }\n                        return result;\n                    })()\n                },\n                \"r\": {\n                    validator: \".\",\n                    cardinality: 50\n                }\n            },\n            insertMode: false,\n            autoUnmask: false\n        },\n        \"ip\": { //ip-address mask\n            mask: [\"[[x]y]z.[[x]y]z.[[x]y]z.x[yz]\", \"[[x]y]z.[[x]y]z.[[x]y]z.[[x]y][z]\"],\n            definitions: {\n                'x': {\n                    validator: \"[012]\",\n                    cardinality: 1,\n                    definitionSymbol: \"i\"\n                },\n                'y': {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        if (pos - 1 > -1 && buffer[pos - 1] != \".\")\n                            chrs = buffer[pos - 1] + chrs;\n                        else chrs = \"0\" + chrs;\n                        return new RegExp(\"2[0-5]|[01][0-9]\").test(chrs);\n                    },\n                    cardinality: 1,\n                    definitionSymbol: \"i\"\n                },\n                'z': {\n                    validator: function (chrs, buffer, pos, strict, opts) {\n                        if (pos - 1 > -1 && buffer[pos - 1] != \".\") {\n                            chrs = buffer[pos - 1] + chrs;\n                            if (pos - 2 > -1 && buffer[pos - 2] != \".\") {\n                                chrs = buffer[pos - 2] + chrs;\n                            } else chrs = \"0\" + chrs;\n                        } else chrs = \"00\" + chrs;\n                        return new RegExp(\"25[0-5]|2[0-4][0-9]|[01][0-9][0-9]\").test(chrs);\n                    },\n                    cardinality: 1,\n                    definitionSymbol: \"i\"\n                }\n            }\n        }\n    });\n})(jQuery);\n"]}