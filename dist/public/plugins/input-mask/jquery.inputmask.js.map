{"version":3,"sources":["../../../../public/plugins/input-mask/jquery.inputmask.js"],"names":["$","fn","inputmask","undefined","isInputEventSupported","eventName","el","document","createElement","isSupported","setAttribute","resolveAlias","aliasStr","options","opts","aliasDefinition","aliases","alias","extend","generateMaskSets","ms","genmasks","getMaskTemplate","mask","numericInput","split","reverse","join","escaped","outCount","greedy","repeat","length","placeholder","singleMask","map","element","index","outElem","escapeChar","optionalmarker","start","end","maskdef","definitions","i","cardinality","push","charAt","repeatedMask","slice","concat","getTestingChain","isOptional","newBlockMarker","prevalidators","prevalidatorsL","prevalidator","validator","RegExp","test","optionality","offset","casing","def","markOptional","maskPart","splitFirstOptionalEndPart","optionalStartMarkers","optionalEndMarkers","mpl","maskParts","substring","splitFirstOptionalStartPart","generateMask","maskPrefix","metadata","newMask","maskTemplate","masks","inArray","isFunction","call","isArray","each","ndx","msk","toString","sort","a","b","maskScope","masksets","activeMasksetIndex","actionObj","isRTL","valueOnFocus","getActiveBuffer","$el","chromeValueOnInput","skipKeyPressEvent","skipInputEvent","ignorable","getActiveMaskSet","getActiveTests","getActiveBufferTemplate","isValid","pos","c","strict","_isValid","position","activeMaskset","testPos","determineTestPosition","loopend","chrs","buffer","getBufferElement","skipOptionalPartCharacter","PostProcessResults","maskForwards","results","hasValidActual","rslt","actualLVP","lowestPos","lowestIndex","rsltValid","setBufferElement","result","currentActiveMasksetIndex","actualBuffer","actualPrevious","seekPrevious","value","maskPos","lvp","newValidPosition","isMask","maxForward","seekNext","fw","getMaskLength","determineActiveMasksetIndex","currentMasksetIndex","highestValid","clearBuffer","data","maskL","autoPrepare","prepareBuffer","elem","toUpperCase","toLowerCase","j","writeBuffer","input","caretPos","_valueSet","caret","stripNomasks","setReTargetPlaceHolder","getPlaceHolder","checkVal","writeOut","nptvl","intelliCheck","inputValue","truncateInput","_valueGet","ml","charCode","p","keypressEvent","charCodeAt","escapeRegex","str","replace","clearOptionalTail","tmpBuffer","pop","unmaskedvalue","$input","skipDatepickerCheck","hasClass","umValue","unmaskedValue","onUnMask","TranslatePosition","bffrLght","begin","npt","jquery","range","is","scrollLeft","scrollWidth","insertMode","setSelectionRange","selectionStart","selectionEnd","android","createTextRange","collapse","moveEnd","moveStart","select","selection","createRange","duplicate","text","isComplete","complete","highestValidPosition","aml","msComplete","isSelection","installEventRuler","events","_data","eventType","eventHandlers","eventHandler","namespace","type","handler","e","readOnly","disabled","preventDefault","apply","arguments","patchValueProperty","valueProperty","Object","getOwnPropertyDescriptor","get","valueGet","valueSet","set","defineProperty","$self","inputData","autoUnmask","triggerHandler","__lookupGetter__","__lookupSetter__","__defineGetter__","__defineSetter__","valHooks","inputmaskpatch","jQuery","$elem","shiftL","maskJumps","trbuffer","bl","shiftR","t","lengthBefore","HandleRemove","k","keyCode","BACKSPACE","DELETE","pend","posBegin","isNumeric","radixPoint","newpos","firstMaskPos","keydownEvent","iphone","ctrlKey","trigger","showTooltip","prop","END","PAGE_DOWN","setTimeout","shiftKey","HOME","PAGE_UP","ESCAPE","click","INSERT","RIGHT","LEFT","currentCaretPos","onKeyDown","ignorables","checkval","window","event","which","altKey","metaKey","String","fromCharCode","pcaret","isSlctn","redetermineLVP","initialIndex","lmnt","radixPosition","indexOf","minimalForwardPosition","np","refresh","lastUnmaskedPosition","bfrClone","nlvp","nextPos","self","onKeyValidation","newCaretPosition","returnValue","keyupEvent","androidchrome","onKeyUp","TAB","showMaskOnFocus","inputEvent","attr","maxLength","Math","round","dir","rightAlignNumerics","css","removeAttr","unbind","removeClass","closest","bind","change","showMaskOnHover","nptValue","clearMaskOnLostFocus","clearIncomplete","addClass","selectedCaret","clickPosition","lastPosition","skipRadixDance","pasteEvent","pasteValue","onBeforePaste","oncomplete","onincomplete","oncleared","msie10","activeElement","navigator","userAgent","match","defaults","quantifiermarker","groupmarker","noop","ALT","CAPS_LOCK","COMMA","COMMAND","COMMAND_LEFT","COMMAND_RIGHT","CONTROL","DOWN","ENTER","MENU","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","PERIOD","SHIFT","SPACE","UP","WINDOWS","currentBuffer","calculatedLength","specials","format","val","removeData","attrOptions","dataoptions","parseJSON","ex"],"mappings":"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","file":"jquery.inputmask.js","sourcesContent":["/**\n* @license Input Mask plugin for jquery\n* http://github.com/RobinHerbots/jquery.inputmask\n* Copyright (c) 2010 - 2014 Robin Herbots\n* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n* Version: 0.0.0\n*/\n\n(function ($) {\n    if ($.fn.inputmask === undefined) {\n        //helper functions    \n        function isInputEventSupported(eventName) {\n            var el = document.createElement('input'),\n            eventName = 'on' + eventName,\n            isSupported = (eventName in el);\n            if (!isSupported) {\n                el.setAttribute(eventName, 'return;');\n                isSupported = typeof el[eventName] == 'function';\n            }\n            el = null;\n            return isSupported;\n        }\n        function resolveAlias(aliasStr, options, opts) {\n            var aliasDefinition = opts.aliases[aliasStr];\n            if (aliasDefinition) {\n                if (aliasDefinition.alias) resolveAlias(aliasDefinition.alias, undefined, opts); //alias is another alias\n                $.extend(true, opts, aliasDefinition);  //merge alias definition in the options\n                $.extend(true, opts, options);  //reapply extra given options\n                return true;\n            }\n            return false;\n        }\n        function generateMaskSets(opts) {\n            var ms = [];\n            var genmasks = []; //used to keep track of the masks that where processed, to avoid duplicates\n            function getMaskTemplate(mask) {\n                if (opts.numericInput) {\n                    mask = mask.split('').reverse().join('');\n                }\n                var escaped = false, outCount = 0, greedy = opts.greedy, repeat = opts.repeat;\n                if (repeat == \"*\") greedy = false;\n                //if (greedy == true && opts.placeholder == \"\") opts.placeholder = \" \";\n                if (mask.length == 1 && greedy == false && repeat != 0) { opts.placeholder = \"\"; } //hide placeholder with single non-greedy mask\n                var singleMask = $.map(mask.split(\"\"), function (element, index) {\n                    var outElem = [];\n                    if (element == opts.escapeChar) {\n                        escaped = true;\n                    }\n                    else if ((element != opts.optionalmarker.start && element != opts.optionalmarker.end) || escaped) {\n                        var maskdef = opts.definitions[element];\n                        if (maskdef && !escaped) {\n                            for (var i = 0; i < maskdef.cardinality; i++) {\n                                outElem.push(opts.placeholder.charAt((outCount + i) % opts.placeholder.length));\n                            }\n                        } else {\n                            outElem.push(element);\n                            escaped = false;\n                        }\n                        outCount += outElem.length;\n                        return outElem;\n                    }\n                });\n\n                //allocate repetitions\n                var repeatedMask = singleMask.slice();\n                for (var i = 1; i < repeat && greedy; i++) {\n                    repeatedMask = repeatedMask.concat(singleMask.slice());\n                }\n\n                return { \"mask\": repeatedMask, \"repeat\": repeat, \"greedy\": greedy };\n            }\n            //test definition => {fn: RegExp/function, cardinality: int, optionality: bool, newBlockMarker: bool, offset: int, casing: null/upper/lower, def: definitionSymbol}\n            function getTestingChain(mask) {\n                if (opts.numericInput) {\n                    mask = mask.split('').reverse().join('');\n                }\n                var isOptional = false, escaped = false;\n                var newBlockMarker = false; //indicates wheter the begin/ending of a block should be indicated\n\n                return $.map(mask.split(\"\"), function (element, index) {\n                    var outElem = [];\n\n                    if (element == opts.escapeChar) {\n                        escaped = true;\n                    } else if (element == opts.optionalmarker.start && !escaped) {\n                        isOptional = true;\n                        newBlockMarker = true;\n                    }\n                    else if (element == opts.optionalmarker.end && !escaped) {\n                        isOptional = false;\n                        newBlockMarker = true;\n                    }\n                    else {\n                        var maskdef = opts.definitions[element];\n                        if (maskdef && !escaped) {\n                            var prevalidators = maskdef[\"prevalidator\"], prevalidatorsL = prevalidators ? prevalidators.length : 0;\n                            for (var i = 1; i < maskdef.cardinality; i++) {\n                                var prevalidator = prevalidatorsL >= i ? prevalidators[i - 1] : [], validator = prevalidator[\"validator\"], cardinality = prevalidator[\"cardinality\"];\n                                outElem.push({ fn: validator ? typeof validator == 'string' ? new RegExp(validator) : new function () { this.test = validator; } : new RegExp(\".\"), cardinality: cardinality ? cardinality : 1, optionality: isOptional, newBlockMarker: isOptional == true ? newBlockMarker : false, offset: 0, casing: maskdef[\"casing\"], def: maskdef[\"definitionSymbol\"] || element });\n                                if (isOptional == true) //reset newBlockMarker\n                                    newBlockMarker = false;\n                            }\n                            outElem.push({ fn: maskdef.validator ? typeof maskdef.validator == 'string' ? new RegExp(maskdef.validator) : new function () { this.test = maskdef.validator; } : new RegExp(\".\"), cardinality: maskdef.cardinality, optionality: isOptional, newBlockMarker: newBlockMarker, offset: 0, casing: maskdef[\"casing\"], def: maskdef[\"definitionSymbol\"] || element });\n                        } else {\n                            outElem.push({ fn: null, cardinality: 0, optionality: isOptional, newBlockMarker: newBlockMarker, offset: 0, casing: null, def: element });\n                            escaped = false;\n                        }\n                        //reset newBlockMarker\n                        newBlockMarker = false;\n                        return outElem;\n                    }\n                });\n            }\n            function markOptional(maskPart) { //needed for the clearOptionalTail functionality\n                return opts.optionalmarker.start + maskPart + opts.optionalmarker.end;\n            }\n            function splitFirstOptionalEndPart(maskPart) {\n                var optionalStartMarkers = 0, optionalEndMarkers = 0, mpl = maskPart.length;\n                for (var i = 0; i < mpl; i++) {\n                    if (maskPart.charAt(i) == opts.optionalmarker.start) {\n                        optionalStartMarkers++;\n                    }\n                    if (maskPart.charAt(i) == opts.optionalmarker.end) {\n                        optionalEndMarkers++;\n                    }\n                    if (optionalStartMarkers > 0 && optionalStartMarkers == optionalEndMarkers)\n                        break;\n                }\n                var maskParts = [maskPart.substring(0, i)];\n                if (i < mpl) {\n                    maskParts.push(maskPart.substring(i + 1, mpl));\n                }\n                return maskParts;\n            }\n            function splitFirstOptionalStartPart(maskPart) {\n                var mpl = maskPart.length;\n                for (var i = 0; i < mpl; i++) {\n                    if (maskPart.charAt(i) == opts.optionalmarker.start) {\n                        break;\n                    }\n                }\n                var maskParts = [maskPart.substring(0, i)];\n                if (i < mpl) {\n                    maskParts.push(maskPart.substring(i + 1, mpl));\n                }\n                return maskParts;\n            }\n            function generateMask(maskPrefix, maskPart, metadata) {\n                var maskParts = splitFirstOptionalEndPart(maskPart);\n                var newMask, maskTemplate;\n\n                var masks = splitFirstOptionalStartPart(maskParts[0]);\n                if (masks.length > 1) {\n                    newMask = maskPrefix + masks[0] + markOptional(masks[1]) + (maskParts.length > 1 ? maskParts[1] : \"\");\n                    if ($.inArray(newMask, genmasks) == -1 && newMask != \"\") {\n                        genmasks.push(newMask);\n                        maskTemplate = getMaskTemplate(newMask);\n                        ms.push({\n                            \"mask\": newMask,\n                            \"_buffer\": maskTemplate[\"mask\"],\n                            \"buffer\": maskTemplate[\"mask\"].slice(),\n                            \"tests\": getTestingChain(newMask),\n                            \"lastValidPosition\": -1,\n                            \"greedy\": maskTemplate[\"greedy\"],\n                            \"repeat\": maskTemplate[\"repeat\"],\n                            \"metadata\": metadata\n                        });\n                    }\n                    newMask = maskPrefix + masks[0] + (maskParts.length > 1 ? maskParts[1] : \"\");\n                    if ($.inArray(newMask, genmasks) == -1 && newMask != \"\") {\n                        genmasks.push(newMask);\n                        maskTemplate = getMaskTemplate(newMask);\n                        ms.push({\n                            \"mask\": newMask,\n                            \"_buffer\": maskTemplate[\"mask\"],\n                            \"buffer\": maskTemplate[\"mask\"].slice(),\n                            \"tests\": getTestingChain(newMask),\n                            \"lastValidPosition\": -1,\n                            \"greedy\": maskTemplate[\"greedy\"],\n                            \"repeat\": maskTemplate[\"repeat\"],\n                            \"metadata\": metadata\n                        });\n                    }\n                    if (splitFirstOptionalStartPart(masks[1]).length > 1) { //optional contains another optional\n                        generateMask(maskPrefix + masks[0], masks[1] + maskParts[1], metadata);\n                    }\n                    if (maskParts.length > 1 && splitFirstOptionalStartPart(maskParts[1]).length > 1) {\n                        generateMask(maskPrefix + masks[0] + markOptional(masks[1]), maskParts[1], metadata);\n                        generateMask(maskPrefix + masks[0], maskParts[1], metadata);\n                    }\n                }\n                else {\n                    newMask = maskPrefix + maskParts;\n                    if ($.inArray(newMask, genmasks) == -1 && newMask != \"\") {\n                        genmasks.push(newMask);\n                        maskTemplate = getMaskTemplate(newMask);\n                        ms.push({\n                            \"mask\": newMask,\n                            \"_buffer\": maskTemplate[\"mask\"],\n                            \"buffer\": maskTemplate[\"mask\"].slice(),\n                            \"tests\": getTestingChain(newMask),\n                            \"lastValidPosition\": -1,\n                            \"greedy\": maskTemplate[\"greedy\"],\n                            \"repeat\": maskTemplate[\"repeat\"],\n                            \"metadata\": metadata\n                        });\n                    }\n                }\n\n            }\n\n            if ($.isFunction(opts.mask)) { //allow mask to be a preprocessing fn - should return a valid mask\n                opts.mask = opts.mask.call(this, opts);\n            }\n            if ($.isArray(opts.mask)) {\n                $.each(opts.mask, function (ndx, msk) {\n                    if (msk[\"mask\"] != undefined) {\n                        generateMask(\"\", msk[\"mask\"].toString(), msk);\n                    } else\n                        generateMask(\"\", msk.toString());\n                });\n            } else generateMask(\"\", opts.mask.toString());\n\n            return opts.greedy ? ms : ms.sort(function (a, b) { return a[\"mask\"].length - b[\"mask\"].length; });\n        }\n\n        var msie10 = navigator.userAgent.match(new RegExp(\"msie 10\", \"i\")) !== null,\n            iphone = navigator.userAgent.match(new RegExp(\"iphone\", \"i\")) !== null,\n            android = navigator.userAgent.match(new RegExp(\"android.*safari.*\", \"i\")) !== null,\n            androidchrome = navigator.userAgent.match(new RegExp(\"android.*chrome.*\", \"i\")) !== null,\n            pasteEvent = isInputEventSupported('paste') ? 'paste' : isInputEventSupported('input') ? 'input' : \"propertychange\";\n\n\n        //masking scope\n        //actionObj definition see below\n        function maskScope(masksets, activeMasksetIndex, opts, actionObj) {\n            var isRTL = false,\n                valueOnFocus = getActiveBuffer().join(''),\n                $el, chromeValueOnInput,\n                skipKeyPressEvent = false, //Safari 5.1.x - modal dialog fires keypress twice workaround\n                skipInputEvent = false, //skip when triggered from within inputmask\n                ignorable = false;\n\n\n            //maskset helperfunctions\n\n            function getActiveMaskSet() {\n                return masksets[activeMasksetIndex];\n            }\n\n            function getActiveTests() {\n                return getActiveMaskSet()['tests'];\n            }\n\n            function getActiveBufferTemplate() {\n                return getActiveMaskSet()['_buffer'];\n            }\n\n            function getActiveBuffer() {\n                return getActiveMaskSet()['buffer'];\n            }\n\n            function isValid(pos, c, strict) { //strict true ~ no correction or autofill\n                strict = strict === true; //always set a value to strict to prevent possible strange behavior in the extensions \n\n                function _isValid(position, activeMaskset, c, strict) {\n                    var testPos = determineTestPosition(position), loopend = c ? 1 : 0, chrs = '', buffer = activeMaskset[\"buffer\"];\n                    for (var i = activeMaskset['tests'][testPos].cardinality; i > loopend; i--) {\n                        chrs += getBufferElement(buffer, testPos - (i - 1));\n                    }\n\n                    if (c) {\n                        chrs += c;\n                    }\n\n                    //return is false or a json object => { pos: ??, c: ??} or true\n                    return activeMaskset['tests'][testPos].fn != null ?\n                        activeMaskset['tests'][testPos].fn.test(chrs, buffer, position, strict, opts)\n                        : (c == getBufferElement(activeMaskset['_buffer'], position, true) || c == opts.skipOptionalPartCharacter) ?\n                            { \"refresh\": true, c: getBufferElement(activeMaskset['_buffer'], position, true), pos: position }\n                            : false;\n                }\n\n                function PostProcessResults(maskForwards, results) {\n                    var hasValidActual = false;\n                    $.each(results, function (ndx, rslt) {\n                        hasValidActual = $.inArray(rslt[\"activeMasksetIndex\"], maskForwards) == -1 && rslt[\"result\"] !== false;\n                        if (hasValidActual) return false;\n                    });\n                    if (hasValidActual) { //strip maskforwards\n                        results = $.map(results, function (rslt, ndx) {\n                            if ($.inArray(rslt[\"activeMasksetIndex\"], maskForwards) == -1) {\n                                return rslt;\n                            } else {\n                                masksets[rslt[\"activeMasksetIndex\"]][\"lastValidPosition\"] = actualLVP;\n                            }\n                        });\n                    } else { //keep maskforwards with the least forward\n                        var lowestPos = -1, lowestIndex = -1, rsltValid;\n                        $.each(results, function (ndx, rslt) {\n                            if ($.inArray(rslt[\"activeMasksetIndex\"], maskForwards) != -1 && rslt[\"result\"] !== false & (lowestPos == -1 || lowestPos > rslt[\"result\"][\"pos\"])) {\n                                lowestPos = rslt[\"result\"][\"pos\"];\n                                lowestIndex = rslt[\"activeMasksetIndex\"];\n                            }\n                        });\n                        results = $.map(results, function (rslt, ndx) {\n                            if ($.inArray(rslt[\"activeMasksetIndex\"], maskForwards) != -1) {\n                                if (rslt[\"result\"][\"pos\"] == lowestPos) {\n                                    return rslt;\n                                } else if (rslt[\"result\"] !== false) {\n                                    for (var i = pos; i < lowestPos; i++) {\n                                        rsltValid = _isValid(i, masksets[rslt[\"activeMasksetIndex\"]], masksets[lowestIndex][\"buffer\"][i], true);\n                                        if (rsltValid === false) {\n                                            masksets[rslt[\"activeMasksetIndex\"]][\"lastValidPosition\"] = lowestPos - 1;\n                                            break;\n                                        } else {\n                                            setBufferElement(masksets[rslt[\"activeMasksetIndex\"]][\"buffer\"], i, masksets[lowestIndex][\"buffer\"][i], true);\n                                            masksets[rslt[\"activeMasksetIndex\"]][\"lastValidPosition\"] = i;\n                                        }\n                                    }\n                                    //also check check for the lowestpos with the new input\n                                    rsltValid = _isValid(lowestPos, masksets[rslt[\"activeMasksetIndex\"]], c, true);\n                                    if (rsltValid !== false) {\n                                        setBufferElement(masksets[rslt[\"activeMasksetIndex\"]][\"buffer\"], lowestPos, c, true);\n                                        masksets[rslt[\"activeMasksetIndex\"]][\"lastValidPosition\"] = lowestPos;\n                                    }\n                                    //console.log(\"ndx \" + rslt[\"activeMasksetIndex\"] + \" validate \" + masksets[rslt[\"activeMasksetIndex\"]][\"buffer\"].join('') + \" lv \" + masksets[rslt[\"activeMasksetIndex\"]]['lastValidPosition']);\n                                    return rslt;\n                                }\n                            }\n                        });\n                    }\n                    return results;\n                }\n\n                if (strict) {\n                    var result = _isValid(pos, getActiveMaskSet(), c, strict); //only check validity in current mask when validating strict\n                    if (result === true) {\n                        result = { \"pos\": pos }; //always take a possible corrected maskposition into account\n                    }\n                    return result;\n                }\n\n                var results = [], result = false, currentActiveMasksetIndex = activeMasksetIndex,\n                    actualBuffer = getActiveBuffer().slice(), actualLVP = getActiveMaskSet()[\"lastValidPosition\"],\n                    actualPrevious = seekPrevious(pos),\n                    maskForwards = [];\n                $.each(masksets, function (index, value) {\n                    if (typeof (value) == \"object\") {\n                        activeMasksetIndex = index;\n\n                        var maskPos = pos;\n                        var lvp = getActiveMaskSet()['lastValidPosition'],\n                            rsltValid;\n                        if (lvp == actualLVP) {\n                            if ((maskPos - actualLVP) > 1) {\n                                for (var i = lvp == -1 ? 0 : lvp; i < maskPos; i++) {\n                                    rsltValid = _isValid(i, getActiveMaskSet(), actualBuffer[i], true);\n                                    if (rsltValid === false) {\n                                        break;\n                                    } else {\n                                        setBufferElement(getActiveBuffer(), i, actualBuffer[i], true);\n                                        if (rsltValid === true) {\n                                            rsltValid = { \"pos\": i }; //always take a possible corrected maskposition into account\n                                        }\n                                        var newValidPosition = rsltValid.pos || i;\n                                        if (getActiveMaskSet()['lastValidPosition'] < newValidPosition)\n                                            getActiveMaskSet()['lastValidPosition'] = newValidPosition; //set new position from isValid\n                                    }\n                                }\n                            }\n                            //does the input match on a further position?\n                            if (!isMask(maskPos) && !_isValid(maskPos, getActiveMaskSet(), c, strict)) {\n                                var maxForward = seekNext(maskPos) - maskPos;\n                                for (var fw = 0; fw < maxForward; fw++) {\n                                    if (_isValid(++maskPos, getActiveMaskSet(), c, strict) !== false)\n                                        break;\n                                }\n                                maskForwards.push(activeMasksetIndex);\n                                //console.log('maskforward ' + activeMasksetIndex + \" pos \" + pos + \" maskPos \" + maskPos);\n                            }\n                        }\n\n                        if (getActiveMaskSet()['lastValidPosition'] >= actualLVP || activeMasksetIndex == currentActiveMasksetIndex) {\n                            if (maskPos >= 0 && maskPos < getMaskLength()) {\n                                result = _isValid(maskPos, getActiveMaskSet(), c, strict);\n                                if (result !== false) {\n                                    if (result === true) {\n                                        result = { \"pos\": maskPos }; //always take a possible corrected maskposition into account\n                                    }\n                                    var newValidPosition = result.pos || maskPos;\n                                    if (getActiveMaskSet()['lastValidPosition'] < newValidPosition)\n                                        getActiveMaskSet()['lastValidPosition'] = newValidPosition; //set new position from isValid\n                                }\n                                //console.log(\"pos \" + pos + \" ndx \" + activeMasksetIndex + \" validate \" + getActiveBuffer().join('') + \" lv \" + getActiveMaskSet()['lastValidPosition']);\n                                results.push({ \"activeMasksetIndex\": index, \"result\": result });\n                            }\n                        }\n                    }\n                });\n                activeMasksetIndex = currentActiveMasksetIndex; //reset activeMasksetIndex\n\n                return PostProcessResults(maskForwards, results); //return results of the multiple mask validations\n            }\n\n            function determineActiveMasksetIndex() {\n                var currentMasksetIndex = activeMasksetIndex,\n                    highestValid = { \"activeMasksetIndex\": 0, \"lastValidPosition\": -1, \"next\": -1 };\n                $.each(masksets, function (index, value) {\n                    if (typeof (value) == \"object\") {\n                        activeMasksetIndex = index;\n                        if (getActiveMaskSet()['lastValidPosition'] > highestValid['lastValidPosition']) {\n                            highestValid[\"activeMasksetIndex\"] = index;\n                            highestValid[\"lastValidPosition\"] = getActiveMaskSet()['lastValidPosition'];\n                            highestValid[\"next\"] = seekNext(getActiveMaskSet()['lastValidPosition']);\n                        } else if (getActiveMaskSet()['lastValidPosition'] == highestValid['lastValidPosition'] &&\n                            (highestValid['next'] == -1 || highestValid['next'] > seekNext(getActiveMaskSet()['lastValidPosition']))) {\n                            highestValid[\"activeMasksetIndex\"] = index;\n                            highestValid[\"lastValidPosition\"] = getActiveMaskSet()['lastValidPosition'];\n                            highestValid[\"next\"] = seekNext(getActiveMaskSet()['lastValidPosition']);\n                        }\n                    }\n                });\n\n                activeMasksetIndex = highestValid[\"lastValidPosition\"] != -1 && masksets[currentMasksetIndex][\"lastValidPosition\"] == highestValid[\"lastValidPosition\"] ? currentMasksetIndex : highestValid[\"activeMasksetIndex\"];\n                if (currentMasksetIndex != activeMasksetIndex) {\n                    clearBuffer(getActiveBuffer(), seekNext(highestValid[\"lastValidPosition\"]), getMaskLength());\n                    getActiveMaskSet()[\"writeOutBuffer\"] = true;\n                }\n                $el.data('_inputmask')['activeMasksetIndex'] = activeMasksetIndex; //store the activeMasksetIndex\n            }\n\n            function isMask(pos) {\n                var testPos = determineTestPosition(pos);\n                var test = getActiveTests()[testPos];\n\n                return test != undefined ? test.fn : false;\n            }\n\n            function determineTestPosition(pos) {\n                return pos % getActiveTests().length;\n            }\n\n            function getMaskLength() {\n                return opts.getMaskLength(getActiveBufferTemplate(), getActiveMaskSet()['greedy'], getActiveMaskSet()['repeat'], getActiveBuffer(), opts);\n            }\n\n            //pos: from position\n\n            function seekNext(pos) {\n                var maskL = getMaskLength();\n                if (pos >= maskL) return maskL;\n                var position = pos;\n                while (++position < maskL && !isMask(position)) {\n                }\n                return position;\n            }\n\n            //pos: from position\n\n            function seekPrevious(pos) {\n                var position = pos;\n                if (position <= 0) return 0;\n\n                while (--position > 0 && !isMask(position)) {\n                }\n                return position;\n            }\n\n            function setBufferElement(buffer, position, element, autoPrepare) {\n                if (autoPrepare) position = prepareBuffer(buffer, position);\n\n                var test = getActiveTests()[determineTestPosition(position)];\n                var elem = element;\n                if (elem != undefined && test != undefined) {\n                    switch (test.casing) {\n                        case \"upper\":\n                            elem = element.toUpperCase();\n                            break;\n                        case \"lower\":\n                            elem = element.toLowerCase();\n                            break;\n                    }\n                }\n\n                buffer[position] = elem;\n            }\n\n            function getBufferElement(buffer, position, autoPrepare) {\n                if (autoPrepare) position = prepareBuffer(buffer, position);\n                return buffer[position];\n            }\n\n            //needed to handle the non-greedy mask repetitions\n\n            function prepareBuffer(buffer, position) {\n                var j;\n                while (buffer[position] == undefined && buffer.length < getMaskLength()) {\n                    j = 0;\n                    while (getActiveBufferTemplate()[j] !== undefined) { //add a new buffer\n                        buffer.push(getActiveBufferTemplate()[j++]);\n                    }\n                }\n\n                return position;\n            }\n\n            function writeBuffer(input, buffer, caretPos) {\n                input._valueSet(buffer.join(''));\n                if (caretPos != undefined) {\n                    caret(input, caretPos);\n                }\n            }\n\n            function clearBuffer(buffer, start, end, stripNomasks) {\n                for (var i = start, maskL = getMaskLength() ; i < end && i < maskL; i++) {\n                    if (stripNomasks === true) {\n                        if (!isMask(i))\n                            setBufferElement(buffer, i, \"\");\n                    } else\n                        setBufferElement(buffer, i, getBufferElement(getActiveBufferTemplate().slice(), i, true));\n                }\n            }\n\n            function setReTargetPlaceHolder(buffer, pos) {\n                var testPos = determineTestPosition(pos);\n                setBufferElement(buffer, pos, getBufferElement(getActiveBufferTemplate(), testPos));\n            }\n\n            function getPlaceHolder(pos) {\n                return opts.placeholder.charAt(pos % opts.placeholder.length);\n            }\n\n            function checkVal(input, writeOut, strict, nptvl, intelliCheck) {\n                var inputValue = nptvl != undefined ? nptvl.slice() : truncateInput(input._valueGet()).split('');\n\n                $.each(masksets, function (ndx, ms) {\n                    if (typeof (ms) == \"object\") {\n                        ms[\"buffer\"] = ms[\"_buffer\"].slice();\n                        ms[\"lastValidPosition\"] = -1;\n                        ms[\"p\"] = -1;\n                    }\n                });\n                if (strict !== true) activeMasksetIndex = 0;\n                if (writeOut) input._valueSet(\"\"); //initial clear\n                var ml = getMaskLength();\n                $.each(inputValue, function (ndx, charCode) {\n                    if (intelliCheck === true) {\n                        var p = getActiveMaskSet()[\"p\"], lvp = p == -1 ? p : seekPrevious(p),\n                            pos = lvp == -1 ? ndx : seekNext(lvp);\n                        if ($.inArray(charCode, getActiveBufferTemplate().slice(lvp + 1, pos)) == -1) {\n                            keypressEvent.call(input, undefined, true, charCode.charCodeAt(0), writeOut, strict, ndx);\n                        }\n                    } else {\n                        keypressEvent.call(input, undefined, true, charCode.charCodeAt(0), writeOut, strict, ndx);\n                    }\n                });\n\n                if (strict === true && getActiveMaskSet()[\"p\"] != -1) {\n                    getActiveMaskSet()[\"lastValidPosition\"] = seekPrevious(getActiveMaskSet()[\"p\"]);\n                }\n            }\n\n            function escapeRegex(str) {\n                return $.inputmask.escapeRegex.call(this, str);\n            }\n\n            function truncateInput(inputValue) {\n                return inputValue.replace(new RegExp(\"(\" + escapeRegex(getActiveBufferTemplate().join('')) + \")*$\"), \"\");\n            }\n\n            function clearOptionalTail(input) {\n                var buffer = getActiveBuffer(), tmpBuffer = buffer.slice(), testPos, pos;\n                for (var pos = tmpBuffer.length - 1; pos >= 0; pos--) {\n                    var testPos = determineTestPosition(pos);\n                    if (getActiveTests()[testPos].optionality) {\n                        if (!isMask(pos) || !isValid(pos, buffer[pos], true))\n                            tmpBuffer.pop();\n                        else break;\n                    } else break;\n                }\n                writeBuffer(input, tmpBuffer);\n            }\n\n            function unmaskedvalue($input, skipDatepickerCheck) {\n                if (getActiveTests() && (skipDatepickerCheck === true || !$input.hasClass('hasDatepicker'))) {\n                    //checkVal(input, false, true);\n                    var umValue = $.map(getActiveBuffer(), function (element, index) {\n                        return isMask(index) && isValid(index, element, true) ? element : null;\n                    });\n                    var unmaskedValue = (isRTL ? umValue.reverse() : umValue).join('');\n                    return opts.onUnMask != undefined ? opts.onUnMask.call(this, getActiveBuffer().join(''), unmaskedValue) : unmaskedValue;\n                } else {\n                    return $input[0]._valueGet();\n                }\n            }\n\n            function TranslatePosition(pos) {\n                if (isRTL && typeof pos == 'number' && (!opts.greedy || opts.placeholder != \"\")) {\n                    var bffrLght = getActiveBuffer().length;\n                    pos = bffrLght - pos;\n                }\n                return pos;\n            }\n\n            function caret(input, begin, end) {\n                var npt = input.jquery && input.length > 0 ? input[0] : input, range;\n                if (typeof begin == 'number') {\n                    begin = TranslatePosition(begin);\n                    end = TranslatePosition(end);\n                    if (!$(input).is(':visible')) {\n                        return;\n                    }\n                    end = (typeof end == 'number') ? end : begin;\n                    npt.scrollLeft = npt.scrollWidth;\n                    if (opts.insertMode == false && begin == end) end++; //set visualization for insert/overwrite mode\n                    if (npt.setSelectionRange) {\n                        npt.selectionStart = begin;\n                        npt.selectionEnd = android ? begin : end;\n\n                    } else if (npt.createTextRange) {\n                        range = npt.createTextRange();\n                        range.collapse(true);\n                        range.moveEnd('character', end);\n                        range.moveStart('character', begin);\n                        range.select();\n                    }\n                } else {\n                    if (!$(input).is(':visible')) {\n                        return { \"begin\": 0, \"end\": 0 };\n                    }\n                    if (npt.setSelectionRange) {\n                        begin = npt.selectionStart;\n                        end = npt.selectionEnd;\n                    } else if (document.selection && document.selection.createRange) {\n                        range = document.selection.createRange();\n                        begin = 0 - range.duplicate().moveStart('character', -100000);\n                        end = begin + range.text.length;\n                    }\n                    begin = TranslatePosition(begin);\n                    end = TranslatePosition(end);\n                    return { \"begin\": begin, \"end\": end };\n                }\n            }\n\n            function isComplete(buffer) { //return true / false / undefined (repeat *)\n                if (opts.repeat == \"*\") return undefined;\n                var complete = false, highestValidPosition = 0, currentActiveMasksetIndex = activeMasksetIndex;\n                $.each(masksets, function (ndx, ms) {\n                    if (typeof (ms) == \"object\") {\n                        activeMasksetIndex = ndx;\n                        var aml = seekPrevious(getMaskLength());\n                        if (ms[\"lastValidPosition\"] >= highestValidPosition && ms[\"lastValidPosition\"] == aml) {\n                            var msComplete = true;\n                            for (var i = 0; i <= aml; i++) {\n                                var mask = isMask(i), testPos = determineTestPosition(i);\n                                if ((mask && (buffer[i] == undefined || buffer[i] == getPlaceHolder(i))) || (!mask && buffer[i] != getActiveBufferTemplate()[testPos])) {\n                                    msComplete = false;\n                                    break;\n                                }\n                            }\n                            complete = complete || msComplete;\n                            if (complete) //break loop\n                                return false;\n                        }\n                        highestValidPosition = ms[\"lastValidPosition\"];\n                    }\n                });\n                activeMasksetIndex = currentActiveMasksetIndex; //reset activeMaskset\n                return complete;\n            }\n\n            function isSelection(begin, end) {\n                return isRTL ? (begin - end) > 1 || ((begin - end) == 1 && opts.insertMode) :\n                    (end - begin) > 1 || ((end - begin) == 1 && opts.insertMode);\n            }\n\n\n            //private functions\n            function installEventRuler(npt) {\n                var events = $._data(npt).events;\n\n                $.each(events, function (eventType, eventHandlers) {\n                    $.each(eventHandlers, function (ndx, eventHandler) {\n                        if (eventHandler.namespace == \"inputmask\") {\n                            if (eventHandler.type != \"setvalue\") {\n                                var handler = eventHandler.handler;\n                                eventHandler.handler = function (e) {\n                                    if (this.readOnly || this.disabled)\n                                        e.preventDefault;\n                                    else\n                                        return handler.apply(this, arguments);\n                                };\n                            }\n                        }\n                    });\n                });\n            }\n\n            function patchValueProperty(npt) {\n                var valueProperty;\n                if (Object.getOwnPropertyDescriptor)\n                    valueProperty = Object.getOwnPropertyDescriptor(npt, \"value\");\n                if (valueProperty && valueProperty.get) {\n                    if (!npt._valueGet) {\n                        var valueGet = valueProperty.get;\n                        var valueSet = valueProperty.set;\n                        npt._valueGet = function () {\n                            return isRTL ? valueGet.call(this).split('').reverse().join('') : valueGet.call(this);\n                        };\n                        npt._valueSet = function (value) {\n                            valueSet.call(this, isRTL ? value.split('').reverse().join('') : value);\n                        };\n\n                        Object.defineProperty(npt, \"value\", {\n                            get: function () {\n                                var $self = $(this), inputData = $(this).data('_inputmask'), masksets = inputData['masksets'],\n                                    activeMasksetIndex = inputData['activeMasksetIndex'];\n                                return inputData && inputData['opts'].autoUnmask ? $self.inputmask('unmaskedvalue') : valueGet.call(this) != masksets[activeMasksetIndex]['_buffer'].join('') ? valueGet.call(this) : '';\n                            },\n                            set: function (value) {\n                                valueSet.call(this, value);\n                                $(this).triggerHandler('setvalue.inputmask');\n                            }\n                        });\n                    }\n                } else if (document.__lookupGetter__ && npt.__lookupGetter__(\"value\")) {\n                    if (!npt._valueGet) {\n                        var valueGet = npt.__lookupGetter__(\"value\");\n                        var valueSet = npt.__lookupSetter__(\"value\");\n                        npt._valueGet = function () {\n                            return isRTL ? valueGet.call(this).split('').reverse().join('') : valueGet.call(this);\n                        };\n                        npt._valueSet = function (value) {\n                            valueSet.call(this, isRTL ? value.split('').reverse().join('') : value);\n                        };\n\n                        npt.__defineGetter__(\"value\", function () {\n                            var $self = $(this), inputData = $(this).data('_inputmask'), masksets = inputData['masksets'],\n                                activeMasksetIndex = inputData['activeMasksetIndex'];\n                            return inputData && inputData['opts'].autoUnmask ? $self.inputmask('unmaskedvalue') : valueGet.call(this) != masksets[activeMasksetIndex]['_buffer'].join('') ? valueGet.call(this) : '';\n                        });\n                        npt.__defineSetter__(\"value\", function (value) {\n                            valueSet.call(this, value);\n                            $(this).triggerHandler('setvalue.inputmask');\n                        });\n                    }\n                } else {\n                    if (!npt._valueGet) {\n                        npt._valueGet = function () { return isRTL ? this.value.split('').reverse().join('') : this.value; };\n                        npt._valueSet = function (value) { this.value = isRTL ? value.split('').reverse().join('') : value; };\n                    }\n                    if ($.valHooks.text == undefined || $.valHooks.text.inputmaskpatch != true) {\n                        var valueGet = $.valHooks.text && $.valHooks.text.get ? $.valHooks.text.get : function (elem) { return elem.value; };\n                        var valueSet = $.valHooks.text && $.valHooks.text.set ? $.valHooks.text.set : function (elem, value) {\n                            elem.value = value;\n                            return elem;\n                        };\n\n                        jQuery.extend($.valHooks, {\n                            text: {\n                                get: function (elem) {\n                                    var $elem = $(elem);\n                                    if ($elem.data('_inputmask')) {\n                                        if ($elem.data('_inputmask')['opts'].autoUnmask)\n                                            return $elem.inputmask('unmaskedvalue');\n                                        else {\n                                            var result = valueGet(elem),\n                                                inputData = $elem.data('_inputmask'), masksets = inputData['masksets'],\n                                                activeMasksetIndex = inputData['activeMasksetIndex'];\n                                            return result != masksets[activeMasksetIndex]['_buffer'].join('') ? result : '';\n                                        }\n                                    } else return valueGet(elem);\n                                },\n                                set: function (elem, value) {\n                                    var $elem = $(elem);\n                                    var result = valueSet(elem, value);\n                                    if ($elem.data('_inputmask')) $elem.triggerHandler('setvalue.inputmask');\n                                    return result;\n                                },\n                                inputmaskpatch: true\n                            }\n                        });\n                    }\n                }\n            }\n\n            //shift chars to left from start to end and put c at end position if defined\n\n            function shiftL(start, end, c, maskJumps) {\n                var buffer = getActiveBuffer();\n                if (maskJumps !== false) //jumping over nonmask position\n                    while (!isMask(start) && start - 1 >= 0) start--;\n                for (var i = start; i < end && i < getMaskLength() ; i++) {\n                    if (isMask(i)) {\n                        setReTargetPlaceHolder(buffer, i);\n                        var j = seekNext(i);\n                        var p = getBufferElement(buffer, j);\n                        if (p != getPlaceHolder(j)) {\n                            if (j < getMaskLength() && isValid(i, p, true) !== false && getActiveTests()[determineTestPosition(i)].def == getActiveTests()[determineTestPosition(j)].def) {\n                                setBufferElement(buffer, i, p, true);\n                            } else {\n                                if (isMask(i))\n                                    break;\n                            }\n                        }\n                    } else {\n                        setReTargetPlaceHolder(buffer, i);\n                    }\n                }\n                if (c != undefined)\n                    setBufferElement(buffer, seekPrevious(end), c);\n\n                if (getActiveMaskSet()[\"greedy\"] == false) {\n                    var trbuffer = truncateInput(buffer.join('')).split('');\n                    buffer.length = trbuffer.length;\n                    for (var i = 0, bl = buffer.length; i < bl; i++) {\n                        buffer[i] = trbuffer[i];\n                    }\n                    if (buffer.length == 0) getActiveMaskSet()[\"buffer\"] = getActiveBufferTemplate().slice();\n                }\n                return start; //return the used start position\n            }\n\n            function shiftR(start, end, c) {\n                var buffer = getActiveBuffer();\n                if (getBufferElement(buffer, start, true) != getPlaceHolder(start)) {\n                    for (var i = seekPrevious(end) ; i > start && i >= 0; i--) {\n                        if (isMask(i)) {\n                            var j = seekPrevious(i);\n                            var t = getBufferElement(buffer, j);\n                            if (t != getPlaceHolder(j)) {\n                                if (isValid(j, t, true) !== false && getActiveTests()[determineTestPosition(i)].def == getActiveTests()[determineTestPosition(j)].def) {\n                                    setBufferElement(buffer, i, t, true);\n                                    setReTargetPlaceHolder(buffer, j);\n                                } //else break;\n                            }\n                        } else\n                            setReTargetPlaceHolder(buffer, i);\n                    }\n                }\n                if (c != undefined && getBufferElement(buffer, start) == getPlaceHolder(start))\n                    setBufferElement(buffer, start, c);\n                var lengthBefore = buffer.length;\n                if (getActiveMaskSet()[\"greedy\"] == false) {\n                    var trbuffer = truncateInput(buffer.join('')).split('');\n                    buffer.length = trbuffer.length;\n                    for (var i = 0, bl = buffer.length; i < bl; i++) {\n                        buffer[i] = trbuffer[i];\n                    }\n                    if (buffer.length == 0) getActiveMaskSet()[\"buffer\"] = getActiveBufferTemplate().slice();\n                }\n                return end - (lengthBefore - buffer.length); //return new start position\n            }\n\n            function HandleRemove(input, k, pos) {\n                if (opts.numericInput || isRTL) {\n                    switch (k) {\n                        case opts.keyCode.BACKSPACE:\n                            k = opts.keyCode.DELETE;\n                            break;\n                        case opts.keyCode.DELETE:\n                            k = opts.keyCode.BACKSPACE;\n                            break;\n                    }\n                    if (isRTL) {\n                        var pend = pos.end;\n                        pos.end = pos.begin;\n                        pos.begin = pend;\n                    }\n                }\n\n                var isSelection = true;\n                if (pos.begin == pos.end) {\n                    var posBegin = k == opts.keyCode.BACKSPACE ? pos.begin - 1 : pos.begin;\n                    if (opts.isNumeric && opts.radixPoint != \"\" && getActiveBuffer()[posBegin] == opts.radixPoint) {\n                        pos.begin = (getActiveBuffer().length - 1 == posBegin) /* radixPoint is latest? delete it */ ? pos.begin : k == opts.keyCode.BACKSPACE ? posBegin : seekNext(posBegin);\n                        pos.end = pos.begin;\n                    }\n                    isSelection = false;\n                    if (k == opts.keyCode.BACKSPACE)\n                        pos.begin--;\n                    else if (k == opts.keyCode.DELETE)\n                        pos.end++;\n                } else if (pos.end - pos.begin == 1 && !opts.insertMode) {\n                    isSelection = false;\n                    if (k == opts.keyCode.BACKSPACE)\n                        pos.begin--;\n                }\n\n                clearBuffer(getActiveBuffer(), pos.begin, pos.end);\n\n                var ml = getMaskLength();\n                if (opts.greedy == false) {\n                    shiftL(pos.begin, ml, undefined, !isRTL && (k == opts.keyCode.BACKSPACE && !isSelection));\n                } else {\n                    var newpos = pos.begin;\n                    for (var i = pos.begin; i < pos.end; i++) { //seeknext to skip placeholders at start in selection\n                        if (isMask(i) || !isSelection)\n                            newpos = shiftL(pos.begin, ml, undefined, !isRTL && (k == opts.keyCode.BACKSPACE && !isSelection));\n                    }\n                    if (!isSelection) pos.begin = newpos;\n                }\n                var firstMaskPos = seekNext(-1);\n                clearBuffer(getActiveBuffer(), pos.begin, pos.end, true);\n                checkVal(input, false, masksets[1] == undefined || firstMaskPos >= pos.end, getActiveBuffer());\n                if (getActiveMaskSet()['lastValidPosition'] < firstMaskPos) {\n                    getActiveMaskSet()[\"lastValidPosition\"] = -1;\n                    getActiveMaskSet()[\"p\"] = firstMaskPos;\n                } else {\n                    getActiveMaskSet()[\"p\"] = pos.begin;\n                }\n            }\n\n            function keydownEvent(e) {\n                //Safari 5.1.x - modal dialog fires keypress twice workaround\n                skipKeyPressEvent = false;\n                var input = this, $input = $(input), k = e.keyCode, pos = caret(input);\n\n                //backspace, delete, and escape get special treatment\n                if (k == opts.keyCode.BACKSPACE || k == opts.keyCode.DELETE || (iphone && k == 127) || e.ctrlKey && k == 88) { //backspace/delete\n                    e.preventDefault(); //stop default action but allow propagation\n                    if (k == 88) valueOnFocus = getActiveBuffer().join('');\n                    HandleRemove(input, k, pos);\n                    determineActiveMasksetIndex();\n                    writeBuffer(input, getActiveBuffer(), getActiveMaskSet()[\"p\"]);\n                    if (input._valueGet() == getActiveBufferTemplate().join(''))\n                        $input.trigger('cleared');\n\n                    if (opts.showTooltip) { //update tooltip\n                        $input.prop(\"title\", getActiveMaskSet()[\"mask\"]);\n                    }\n                } else if (k == opts.keyCode.END || k == opts.keyCode.PAGE_DOWN) { //when END or PAGE_DOWN pressed set position at lastmatch\n                    setTimeout(function () {\n                        var caretPos = seekNext(getActiveMaskSet()[\"lastValidPosition\"]);\n                        if (!opts.insertMode && caretPos == getMaskLength() && !e.shiftKey) caretPos--;\n                        caret(input, e.shiftKey ? pos.begin : caretPos, caretPos);\n                    }, 0);\n                } else if ((k == opts.keyCode.HOME && !e.shiftKey) || k == opts.keyCode.PAGE_UP) { //Home or page_up\n                    caret(input, 0, e.shiftKey ? pos.begin : 0);\n                } else if (k == opts.keyCode.ESCAPE || (k == 90 && e.ctrlKey)) { //escape && undo\n                    checkVal(input, true, false, valueOnFocus.split(''));\n                    $input.click();\n                } else if (k == opts.keyCode.INSERT && !(e.shiftKey || e.ctrlKey)) { //insert\n                    opts.insertMode = !opts.insertMode;\n                    caret(input, !opts.insertMode && pos.begin == getMaskLength() ? pos.begin - 1 : pos.begin);\n                } else if (opts.insertMode == false && !e.shiftKey) {\n                    if (k == opts.keyCode.RIGHT) {\n                        setTimeout(function () {\n                            var caretPos = caret(input);\n                            caret(input, caretPos.begin);\n                        }, 0);\n                    } else if (k == opts.keyCode.LEFT) {\n                        setTimeout(function () {\n                            var caretPos = caret(input);\n                            caret(input, caretPos.begin - 1);\n                        }, 0);\n                    }\n                }\n\n                var currentCaretPos = caret(input);\n                if (opts.onKeyDown.call(this, e, getActiveBuffer(), opts) === true) //extra stuff to execute on keydown\n                    caret(input, currentCaretPos.begin, currentCaretPos.end);\n                ignorable = $.inArray(k, opts.ignorables) != -1;\n            }\n\n\n            function keypressEvent(e, checkval, k, writeOut, strict, ndx) {\n                //Safari 5.1.x - modal dialog fires keypress twice workaround\n                if (k == undefined && skipKeyPressEvent) return false;\n                skipKeyPressEvent = true;\n\n                var input = this, $input = $(input);\n\n                e = e || window.event;\n                var k = checkval ? k : (e.which || e.charCode || e.keyCode);\n\n                if (checkval !== true && (!(e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable))) {\n                    return true;\n                } else {\n                    if (k) {\n                        //special treat the decimal separator\n                        if (checkval !== true && k == 46 && e.shiftKey == false && opts.radixPoint == \",\") k = 44;\n\n                        var pos, results, result, c = String.fromCharCode(k);\n                        if (checkval) {\n                            var pcaret = strict ? ndx : getActiveMaskSet()[\"lastValidPosition\"] + 1;\n                            pos = { begin: pcaret, end: pcaret };\n                        } else {\n                            pos = caret(input);\n                        }\n\n                        //should we clear a possible selection??\n                        var isSlctn = isSelection(pos.begin, pos.end), redetermineLVP = false,\n                            initialIndex = activeMasksetIndex;\n                        if (isSlctn) {\n                            activeMasksetIndex = initialIndex;\n                            $.each(masksets, function (ndx, lmnt) { //init undobuffer for recovery when not valid\n                                if (typeof (lmnt) == \"object\") {\n                                    activeMasksetIndex = ndx;\n                                    getActiveMaskSet()[\"undoBuffer\"] = getActiveBuffer().join('');\n                                }\n                            });\n                            HandleRemove(input, opts.keyCode.DELETE, pos);\n                            if (!opts.insertMode) { //preserve some space\n                                $.each(masksets, function (ndx, lmnt) {\n                                    if (typeof (lmnt) == \"object\") {\n                                        activeMasksetIndex = ndx;\n                                        shiftR(pos.begin, getMaskLength());\n                                        getActiveMaskSet()[\"lastValidPosition\"] = seekNext(getActiveMaskSet()[\"lastValidPosition\"]);\n                                    }\n                                });\n                            }\n                            activeMasksetIndex = initialIndex; //restore index\n                        }\n\n                        var radixPosition = getActiveBuffer().join('').indexOf(opts.radixPoint);\n                        if (opts.isNumeric && checkval !== true && radixPosition != -1) {\n                            if (opts.greedy && pos.begin <= radixPosition) {\n                                pos.begin = seekPrevious(pos.begin);\n                                pos.end = pos.begin;\n                            } else if (c == opts.radixPoint) {\n                                pos.begin = radixPosition;\n                                pos.end = pos.begin;\n                            }\n                        }\n\n\n                        var p = pos.begin;\n                        results = isValid(p, c, strict);\n                        if (strict === true) results = [{ \"activeMasksetIndex\": activeMasksetIndex, \"result\": results }];\n                        var minimalForwardPosition = -1;\n                        $.each(results, function (index, result) {\n                            activeMasksetIndex = result[\"activeMasksetIndex\"];\n                            getActiveMaskSet()[\"writeOutBuffer\"] = true;\n                            var np = result[\"result\"];\n                            if (np !== false) {\n                                var refresh = false, buffer = getActiveBuffer();\n                                if (np !== true) {\n                                    refresh = np[\"refresh\"]; //only rewrite buffer from isValid\n                                    p = np.pos != undefined ? np.pos : p; //set new position from isValid\n                                    c = np.c != undefined ? np.c : c; //set new char from isValid\n                                }\n                                if (refresh !== true) {\n                                    if (opts.insertMode == true) {\n                                        var lastUnmaskedPosition = getMaskLength();\n                                        var bfrClone = buffer.slice();\n                                        while (getBufferElement(bfrClone, lastUnmaskedPosition, true) != getPlaceHolder(lastUnmaskedPosition) && lastUnmaskedPosition >= p) {\n                                            lastUnmaskedPosition = lastUnmaskedPosition == 0 ? -1 : seekPrevious(lastUnmaskedPosition);\n                                        }\n                                        if (lastUnmaskedPosition >= p) {\n                                            shiftR(p, getMaskLength(), c);\n                                            //shift the lvp if needed\n                                            var lvp = getActiveMaskSet()[\"lastValidPosition\"], nlvp = seekNext(lvp);\n                                            if (nlvp != getMaskLength() && lvp >= p && (getBufferElement(getActiveBuffer(), nlvp, true) != getPlaceHolder(nlvp))) {\n                                                getActiveMaskSet()[\"lastValidPosition\"] = nlvp;\n                                            }\n                                        } else getActiveMaskSet()[\"writeOutBuffer\"] = false;\n                                    } else setBufferElement(buffer, p, c, true);\n                                    if (minimalForwardPosition == -1 || minimalForwardPosition > seekNext(p)) {\n                                        minimalForwardPosition = seekNext(p);\n                                    }\n                                } else if (!strict) {\n                                    var nextPos = p < getMaskLength() ? p + 1 : p;\n                                    if (minimalForwardPosition == -1 || minimalForwardPosition > nextPos) {\n                                        minimalForwardPosition = nextPos;\n                                    }\n                                }\n                                if (minimalForwardPosition > getActiveMaskSet()[\"p\"])\n                                    getActiveMaskSet()[\"p\"] = minimalForwardPosition; //needed for checkval strict \n                            }\n                        });\n\n                        if (strict !== true) {\n                            activeMasksetIndex = initialIndex;\n                            determineActiveMasksetIndex();\n                        }\n                        if (writeOut !== false) {\n                            $.each(results, function (ndx, rslt) {\n                                if (rslt[\"activeMasksetIndex\"] == activeMasksetIndex) {\n                                    result = rslt;\n                                    return false;\n                                }\n                            });\n                            if (result != undefined) {\n                                var self = this;\n                                setTimeout(function () { opts.onKeyValidation.call(self, result[\"result\"], opts); }, 0);\n                                if (getActiveMaskSet()[\"writeOutBuffer\"] && result[\"result\"] !== false) {\n                                    var buffer = getActiveBuffer();\n\n                                    var newCaretPosition;\n                                    if (checkval) {\n                                        newCaretPosition = undefined;\n                                    } else if (opts.numericInput) {\n                                        if (p > radixPosition) {\n                                            newCaretPosition = seekPrevious(minimalForwardPosition);\n                                        } else if (c == opts.radixPoint) {\n                                            newCaretPosition = minimalForwardPosition - 1;\n                                        } else newCaretPosition = seekPrevious(minimalForwardPosition - 1);\n                                    } else {\n                                        newCaretPosition = minimalForwardPosition;\n                                    }\n\n                                    writeBuffer(input, buffer, newCaretPosition);\n                                    if (checkval !== true) {\n                                        setTimeout(function () { //timeout needed for IE\n                                            if (isComplete(buffer) === true)\n                                                $input.trigger(\"complete\");\n                                            skipInputEvent = true;\n                                            $input.trigger(\"input\");\n                                        }, 0);\n                                    }\n                                } else if (isSlctn) {\n                                    getActiveMaskSet()[\"buffer\"] = getActiveMaskSet()[\"undoBuffer\"].split('');\n                                }\n                            }\n                        }\n\n                        if (opts.showTooltip) { //update tooltip\n                            $input.prop(\"title\", getActiveMaskSet()[\"mask\"]);\n                        }\n\n                        //needed for IE8 and below\n                        if (e) e.preventDefault ? e.preventDefault() : e.returnValue = false;\n                    }\n                }\n            }\n\n            function keyupEvent(e) {\n                var $input = $(this), input = this, k = e.keyCode, buffer = getActiveBuffer();\n\n                if (androidchrome && k == opts.keyCode.BACKSPACE) {\n                    if (chromeValueOnInput == input._valueGet())\n                        keydownEvent.call(this, e);\n                }\n\n                opts.onKeyUp.call(this, e, buffer, opts); //extra stuff to execute on keyup\n                if (k == opts.keyCode.TAB && opts.showMaskOnFocus) {\n                    if ($input.hasClass('focus.inputmask') && input._valueGet().length == 0) {\n                        buffer = getActiveBufferTemplate().slice();\n                        writeBuffer(input, buffer);\n                        caret(input, 0);\n                        valueOnFocus = getActiveBuffer().join('');\n                    } else {\n                        writeBuffer(input, buffer);\n                        if (buffer.join('') == getActiveBufferTemplate().join('') && $.inArray(opts.radixPoint, buffer) != -1) {\n                            caret(input, TranslatePosition(0));\n                            $input.click();\n                        } else\n                            caret(input, TranslatePosition(0), TranslatePosition(getMaskLength()));\n                    }\n                }\n            }\n\n            function inputEvent(e) {\n                if (skipInputEvent === true) {\n                    skipInputEvent = false;\n                    return true;\n                }\n                var input = this, $input = $(input);\n\n                chromeValueOnInput = getActiveBuffer().join('');\n                checkVal(input, false, false);\n                writeBuffer(input, getActiveBuffer());\n                if (isComplete(getActiveBuffer()) === true)\n                    $input.trigger(\"complete\");\n                $input.click();\n            }\n\n            function mask(el) {\n                $el = $(el);\n                if ($el.is(\":input\")) {\n                    //store tests & original buffer in the input element - used to get the unmasked value\n                    $el.data('_inputmask', {\n                        'masksets': masksets,\n                        'activeMasksetIndex': activeMasksetIndex,\n                        'opts': opts,\n                        'isRTL': false\n                    });\n\n                    //show tooltip\n                    if (opts.showTooltip) {\n                        $el.prop(\"title\", getActiveMaskSet()[\"mask\"]);\n                    }\n\n                    //correct greedy setting if needed\n                    getActiveMaskSet()['greedy'] = getActiveMaskSet()['greedy'] ? getActiveMaskSet()['greedy'] : getActiveMaskSet()['repeat'] == 0;\n\n                    //handle maxlength attribute\n                    if ($el.attr(\"maxLength\") != null) //only when the attribute is set\n                    {\n                        var maxLength = $el.prop('maxLength');\n                        if (maxLength > -1) { //handle *-repeat\n                            $.each(masksets, function (ndx, ms) {\n                                if (typeof (ms) == \"object\") {\n                                    if (ms[\"repeat\"] == \"*\") {\n                                        ms[\"repeat\"] = maxLength;\n                                    }\n                                }\n                            });\n                        }\n                        if (getMaskLength() >= maxLength && maxLength > -1) { //FF sets no defined max length to -1 \n                            if (maxLength < getActiveBufferTemplate().length) getActiveBufferTemplate().length = maxLength;\n                            if (getActiveMaskSet()['greedy'] == false) {\n                                getActiveMaskSet()['repeat'] = Math.round(maxLength / getActiveBufferTemplate().length);\n                            }\n                            $el.prop('maxLength', getMaskLength() * 2);\n                        }\n                    }\n\n                    patchValueProperty(el);\n\n                    if (opts.numericInput) opts.isNumeric = opts.numericInput;\n                    if (el.dir == \"rtl\" || (opts.numericInput && opts.rightAlignNumerics) || (opts.isNumeric && opts.rightAlignNumerics))\n                        $el.css(\"text-align\", \"right\");\n\n                    if (el.dir == \"rtl\" || opts.numericInput) {\n                        el.dir = \"ltr\";\n                        $el.removeAttr(\"dir\");\n                        var inputData = $el.data('_inputmask');\n                        inputData['isRTL'] = true;\n                        $el.data('_inputmask', inputData);\n                        isRTL = true;\n                    }\n\n                    //unbind all events - to make sure that no other mask will interfere when re-masking\n                    $el.unbind(\".inputmask\");\n                    $el.removeClass('focus.inputmask');\n                    //bind events\n                    $el.closest('form').bind(\"submit\", function () { //trigger change on submit if any\n                        if (valueOnFocus != getActiveBuffer().join('')) {\n                            $el.change();\n                        }\n                    }).bind('reset', function () {\n                        setTimeout(function () {\n                            $el.trigger(\"setvalue\");\n                        }, 0);\n                    });\n                    $el.bind(\"mouseenter.inputmask\", function () {\n                        var $input = $(this), input = this;\n                        if (!$input.hasClass('focus.inputmask') && opts.showMaskOnHover) {\n                            if (input._valueGet() != getActiveBuffer().join('')) {\n                                writeBuffer(input, getActiveBuffer());\n                            }\n                        }\n                    }).bind(\"blur.inputmask\", function () {\n                        var $input = $(this), input = this, nptValue = input._valueGet(), buffer = getActiveBuffer();\n                        $input.removeClass('focus.inputmask');\n                        if (valueOnFocus != getActiveBuffer().join('')) {\n                            $input.change();\n                        }\n                        if (opts.clearMaskOnLostFocus && nptValue != '') {\n                            if (nptValue == getActiveBufferTemplate().join(''))\n                                input._valueSet('');\n                            else { //clearout optional tail of the mask\n                                clearOptionalTail(input);\n                            }\n                        }\n                        if (isComplete(buffer) === false) {\n                            $input.trigger(\"incomplete\");\n                            if (opts.clearIncomplete) {\n                                $.each(masksets, function (ndx, ms) {\n                                    if (typeof (ms) == \"object\") {\n                                        ms[\"buffer\"] = ms[\"_buffer\"].slice();\n                                        ms[\"lastValidPosition\"] = -1;\n                                    }\n                                });\n                                activeMasksetIndex = 0;\n                                if (opts.clearMaskOnLostFocus)\n                                    input._valueSet('');\n                                else {\n                                    buffer = getActiveBufferTemplate().slice();\n                                    writeBuffer(input, buffer);\n                                }\n                            }\n                        }\n                    }).bind(\"focus.inputmask\", function () {\n                        var $input = $(this), input = this, nptValue = input._valueGet();\n                        if (opts.showMaskOnFocus && !$input.hasClass('focus.inputmask') && (!opts.showMaskOnHover || (opts.showMaskOnHover && nptValue == ''))) {\n                            if (input._valueGet() != getActiveBuffer().join('')) {\n                                writeBuffer(input, getActiveBuffer(), seekNext(getActiveMaskSet()[\"lastValidPosition\"]));\n                            }\n                        }\n                        $input.addClass('focus.inputmask');\n                        valueOnFocus = getActiveBuffer().join('');\n                    }).bind(\"mouseleave.inputmask\", function () {\n                        var $input = $(this), input = this;\n                        if (opts.clearMaskOnLostFocus) {\n                            if (!$input.hasClass('focus.inputmask') && input._valueGet() != $input.attr(\"placeholder\")) {\n                                if (input._valueGet() == getActiveBufferTemplate().join('') || input._valueGet() == '')\n                                    input._valueSet('');\n                                else { //clearout optional tail of the mask\n                                    clearOptionalTail(input);\n                                }\n                            }\n                        }\n                    }).bind(\"click.inputmask\", function () {\n                        var input = this;\n                        setTimeout(function () {\n                            var selectedCaret = caret(input), buffer = getActiveBuffer();\n                            if (selectedCaret.begin == selectedCaret.end) {\n                                var clickPosition = isRTL ? TranslatePosition(selectedCaret.begin) : selectedCaret.begin,\n                                    lvp = getActiveMaskSet()[\"lastValidPosition\"],\n                                    lastPosition;\n                                if (opts.isNumeric) {\n                                    lastPosition = opts.skipRadixDance === false && opts.radixPoint != \"\" && $.inArray(opts.radixPoint, buffer) != -1 ?\n                                        (opts.numericInput ? seekNext($.inArray(opts.radixPoint, buffer)) : $.inArray(opts.radixPoint, buffer)) :\n                                        seekNext(lvp);\n                                } else {\n                                    lastPosition = seekNext(lvp);\n                                }\n                                if (clickPosition < lastPosition) {\n                                    if (isMask(clickPosition))\n                                        caret(input, clickPosition);\n                                    else caret(input, seekNext(clickPosition));\n                                } else\n                                    caret(input, lastPosition);\n                            }\n                        }, 0);\n                    }).bind('dblclick.inputmask', function () {\n                        var input = this;\n                        setTimeout(function () {\n                            caret(input, 0, seekNext(getActiveMaskSet()[\"lastValidPosition\"]));\n                        }, 0);\n                    }).bind(pasteEvent + \".inputmask dragdrop.inputmask drop.inputmask\", function (e) {\n                        if (skipInputEvent === true) {\n                            skipInputEvent = false;\n                            return true;\n                        }\n                        var input = this, $input = $(input);\n\n                        //paste event for IE8 and lower I guess ;-)\n                        if (e.type == \"propertychange\" && input._valueGet().length <= getMaskLength()) {\n                            return true;\n                        }\n                        setTimeout(function () {\n                            var pasteValue = opts.onBeforePaste != undefined ? opts.onBeforePaste.call(this, input._valueGet()) : input._valueGet();\n                            checkVal(input, true, false, pasteValue.split(''), true);\n                            if (isComplete(getActiveBuffer()) === true)\n                                $input.trigger(\"complete\");\n                            $input.click();\n                        }, 0);\n                    }).bind('setvalue.inputmask', function () {\n                        var input = this;\n                        checkVal(input, true);\n                        valueOnFocus = getActiveBuffer().join('');\n                        if (input._valueGet() == getActiveBufferTemplate().join(''))\n                            input._valueSet('');\n                    }).bind('complete.inputmask', opts.oncomplete\n                    ).bind('incomplete.inputmask', opts.onincomplete\n                    ).bind('cleared.inputmask', opts.oncleared\n                    ).bind(\"keyup.inputmask\", keyupEvent);\n\n                    if (androidchrome) {\n                        $el.bind(\"input.inputmask\", inputEvent);\n                    } else {\n                        $el.bind(\"keydown.inputmask\", keydownEvent\n                        ).bind(\"keypress.inputmask\", keypressEvent);\n                    }\n\n                    if (msie10)\n                        $el.bind(\"input.inputmask\", inputEvent);\n\n                    //apply mask\n                    checkVal(el, true, false);\n                    valueOnFocus = getActiveBuffer().join('');\n                    // Wrap document.activeElement in a try/catch block since IE9 throw \"Unspecified error\" if document.activeElement is undefined when we are in an IFrame.\n                    var activeElement;\n                    try {\n                        activeElement = document.activeElement;\n                    } catch (e) {\n                    }\n                    if (activeElement === el) { //position the caret when in focus\n                        $el.addClass('focus.inputmask');\n                        caret(el, seekNext(getActiveMaskSet()[\"lastValidPosition\"]));\n                    } else if (opts.clearMaskOnLostFocus) {\n                        if (getActiveBuffer().join('') == getActiveBufferTemplate().join('')) {\n                            el._valueSet('');\n                        } else {\n                            clearOptionalTail(el);\n                        }\n                    } else {\n                        writeBuffer(el, getActiveBuffer());\n                    }\n\n                    installEventRuler(el);\n                }\n            }\n\n            //action object\n            if (actionObj != undefined) {\n                switch (actionObj[\"action\"]) {\n                    case \"isComplete\":\n                        return isComplete(actionObj[\"buffer\"]);\n                    case \"unmaskedvalue\":\n                        isRTL = actionObj[\"$input\"].data('_inputmask')['isRTL'];\n                        return unmaskedvalue(actionObj[\"$input\"], actionObj[\"skipDatepickerCheck\"]);\n                    case \"mask\":\n                        mask(actionObj[\"el\"]);\n                        break;\n                    case \"format\":\n                        $el = $({});\n                        $el.data('_inputmask', {\n                            'masksets': masksets,\n                            'activeMasksetIndex': activeMasksetIndex,\n                            'opts': opts,\n                            'isRTL': opts.numericInput\n                        });\n                        if (opts.numericInput) {\n                            opts.isNumeric = opts.numericInput;\n                            isRTL = true;\n                        }\n\n                        checkVal($el, false, false, actionObj[\"value\"].split(''), true);\n                        return getActiveBuffer().join('');\n                }\n            }\n        }\n        $.inputmask = {\n            //options default\n            defaults: {\n                placeholder: \"_\",\n                optionalmarker: { start: \"[\", end: \"]\" },\n                quantifiermarker: { start: \"{\", end: \"}\" },\n                groupmarker: { start: \"(\", end: \")\" },\n                escapeChar: \"\\\\\",\n                mask: null,\n                oncomplete: $.noop, //executes when the mask is complete\n                onincomplete: $.noop, //executes when the mask is incomplete and focus is lost\n                oncleared: $.noop, //executes when the mask is cleared\n                repeat: 0, //repetitions of the mask: * ~ forever, otherwise specify an integer\n                greedy: true, //true: allocated buffer for the mask and repetitions - false: allocate only if needed\n                autoUnmask: false, //automatically unmask when retrieving the value with $.fn.val or value if the browser supports __lookupGetter__ or getOwnPropertyDescriptor\n                clearMaskOnLostFocus: true,\n                insertMode: true, //insert the input or overwrite the input\n                clearIncomplete: false, //clear the incomplete input on blur\n                aliases: {}, //aliases definitions => see jquery.inputmask.extensions.js\n                onKeyUp: $.noop, //override to implement autocomplete on certain keys for example\n                onKeyDown: $.noop, //override to implement autocomplete on certain keys for example\n                onBeforePaste: undefined, //executes before masking the pasted value to allow preprocessing of the pasted value.  args => pastedValue => return processedValue\n                onUnMask: undefined, //executes after unmasking to allow postprocessing of the unmaskedvalue.  args => maskedValue, unmaskedValue\n                showMaskOnFocus: true, //show the mask-placeholder when the input has focus\n                showMaskOnHover: true, //show the mask-placeholder when hovering the empty input\n                onKeyValidation: $.noop, //executes on every key-press with the result of isValid. Params: result, opts\n                skipOptionalPartCharacter: \" \", //a character which can be used to skip an optional part of a mask\n                showTooltip: false, //show the activemask as tooltip\n                numericInput: false, //numericInput input direction style (input shifts to the left while holding the caret position)\n                //numeric basic properties\n                isNumeric: false, //enable numeric features\n                radixPoint: \"\", //\".\", // | \",\"\n                skipRadixDance: false, //disable radixpoint caret positioning\n                rightAlignNumerics: true, //align numerics to the right\n                //numeric basic properties\n                definitions: {\n                    '9': {\n                        validator: \"[0-9]\",\n                        cardinality: 1\n                    },\n                    'a': {\n                        validator: \"[A-Za-z\\u0410-\\u044F\\u0401\\u0451]\",\n                        cardinality: 1\n                    },\n                    '*': {\n                        validator: \"[A-Za-z\\u0410-\\u044F\\u0401\\u04510-9]\",\n                        cardinality: 1\n                    }\n                },\n                keyCode: {\n                    ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108,\n                    NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91\n                },\n                //specify keycodes which should not be considered in the keypress event, otherwise the preventDefault will stop their default behavior especially in FF\n                ignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123],\n                getMaskLength: function (buffer, greedy, repeat, currentBuffer, opts) {\n                    var calculatedLength = buffer.length;\n                    if (!greedy) {\n                        if (repeat == \"*\") {\n                            calculatedLength = currentBuffer.length + 1;\n                        } else if (repeat > 1) {\n                            calculatedLength += (buffer.length * (repeat - 1));\n                        }\n                    }\n                    return calculatedLength;\n                }\n            },\n            escapeRegex: function (str) {\n                var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n                return str.replace(new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'gim'), '\\\\$1');\n            },\n            format: function (value, options) {\n                var opts = $.extend(true, {}, $.inputmask.defaults, options);\n                resolveAlias(opts.alias, options, opts);\n                return maskScope(generateMaskSets(opts), 0, opts, { \"action\": \"format\", \"value\": value });\n            }\n        };\n\n        $.fn.inputmask = function (fn, options) {\n            var opts = $.extend(true, {}, $.inputmask.defaults, options),\n                masksets,\n                activeMasksetIndex = 0;\n\n            if (typeof fn === \"string\") {\n                switch (fn) {\n                    case \"mask\":\n                        //resolve possible aliases given by options\n                        resolveAlias(opts.alias, options, opts);\n                        masksets = generateMaskSets(opts);\n                        if (masksets.length == 0) { return this; }\n\n                        return this.each(function () {\n                            maskScope($.extend(true, {}, masksets), 0, opts, { \"action\": \"mask\", \"el\": this });\n                        });\n                    case \"unmaskedvalue\":\n                        var $input = $(this), input = this;\n                        if ($input.data('_inputmask')) {\n                            masksets = $input.data('_inputmask')['masksets'];\n                            activeMasksetIndex = $input.data('_inputmask')['activeMasksetIndex'];\n                            opts = $input.data('_inputmask')['opts'];\n                            return maskScope(masksets, activeMasksetIndex, opts, { \"action\": \"unmaskedvalue\", \"$input\": $input });\n                        } else return $input.val();\n                    case \"remove\":\n                        return this.each(function () {\n                            var $input = $(this), input = this;\n                            if ($input.data('_inputmask')) {\n                                masksets = $input.data('_inputmask')['masksets'];\n                                activeMasksetIndex = $input.data('_inputmask')['activeMasksetIndex'];\n                                opts = $input.data('_inputmask')['opts'];\n                                //writeout the unmaskedvalue\n                                input._valueSet(maskScope(masksets, activeMasksetIndex, opts, { \"action\": \"unmaskedvalue\", \"$input\": $input, \"skipDatepickerCheck\": true }));\n                                //clear data\n                                $input.removeData('_inputmask');\n                                //unbind all events\n                                $input.unbind(\".inputmask\");\n                                $input.removeClass('focus.inputmask');\n                                //restore the value property\n                                var valueProperty;\n                                if (Object.getOwnPropertyDescriptor)\n                                    valueProperty = Object.getOwnPropertyDescriptor(input, \"value\");\n                                if (valueProperty && valueProperty.get) {\n                                    if (input._valueGet) {\n                                        Object.defineProperty(input, \"value\", {\n                                            get: input._valueGet,\n                                            set: input._valueSet\n                                        });\n                                    }\n                                } else if (document.__lookupGetter__ && input.__lookupGetter__(\"value\")) {\n                                    if (input._valueGet) {\n                                        input.__defineGetter__(\"value\", input._valueGet);\n                                        input.__defineSetter__(\"value\", input._valueSet);\n                                    }\n                                }\n                                try { //try catch needed for IE7 as it does not supports deleting fns\n                                    delete input._valueGet;\n                                    delete input._valueSet;\n                                } catch (e) {\n                                    input._valueGet = undefined;\n                                    input._valueSet = undefined;\n\n                                }\n                            }\n                        });\n                        break;\n                    case \"getemptymask\": //return the default (empty) mask value, usefull for setting the default value in validation\n                        if (this.data('_inputmask')) {\n                            masksets = this.data('_inputmask')['masksets'];\n                            activeMasksetIndex = this.data('_inputmask')['activeMasksetIndex'];\n                            return masksets[activeMasksetIndex]['_buffer'].join('');\n                        }\n                        else return \"\";\n                    case \"hasMaskedValue\": //check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value \n                        return this.data('_inputmask') ? !this.data('_inputmask')['opts'].autoUnmask : false;\n                    case \"isComplete\":\n                        masksets = this.data('_inputmask')['masksets'];\n                        activeMasksetIndex = this.data('_inputmask')['activeMasksetIndex'];\n                        opts = this.data('_inputmask')['opts'];\n                        return maskScope(masksets, activeMasksetIndex, opts, { \"action\": \"isComplete\", \"buffer\": this[0]._valueGet().split('') });\n                    case \"getmetadata\": //return mask metadata if exists\n                        if (this.data('_inputmask')) {\n                            masksets = this.data('_inputmask')['masksets'];\n                            activeMasksetIndex = this.data('_inputmask')['activeMasksetIndex'];\n                            return masksets[activeMasksetIndex]['metadata'];\n                        }\n                        else return undefined;\n                    default:\n                        //check if the fn is an alias\n                        if (!resolveAlias(fn, options, opts)) {\n                            //maybe fn is a mask so we try\n                            //set mask\n                            opts.mask = fn;\n                        }\n                        masksets = generateMaskSets(opts);\n                        if (masksets.length == 0) { return this; }\n                        return this.each(function () {\n                            maskScope($.extend(true, {}, masksets), activeMasksetIndex, opts, { \"action\": \"mask\", \"el\": this });\n                        });\n\n                        break;\n                }\n            } else if (typeof fn == \"object\") {\n                opts = $.extend(true, {}, $.inputmask.defaults, fn);\n\n                resolveAlias(opts.alias, fn, opts); //resolve aliases\n                masksets = generateMaskSets(opts);\n                if (masksets.length == 0) { return this; }\n                return this.each(function () {\n                    maskScope($.extend(true, {}, masksets), activeMasksetIndex, opts, { \"action\": \"mask\", \"el\": this });\n                });\n            } else if (fn == undefined) {\n                //look for data-inputmask atribute - the attribute should only contain optipns\n                return this.each(function () {\n                    var attrOptions = $(this).attr(\"data-inputmask\");\n                    if (attrOptions && attrOptions != \"\") {\n                        try {\n                            attrOptions = attrOptions.replace(new RegExp(\"'\", \"g\"), '\"');\n                            var dataoptions = $.parseJSON(\"{\" + attrOptions + \"}\");\n                            $.extend(true, dataoptions, options);\n                            opts = $.extend(true, {}, $.inputmask.defaults, dataoptions);\n                            resolveAlias(opts.alias, dataoptions, opts);\n                            opts.alias = undefined;\n                            $(this).inputmask(opts);\n                        } catch (ex) { } //need a more relax parseJSON\n                    }\n                });\n            }\n        };\n    }\n})(jQuery);\n"]}